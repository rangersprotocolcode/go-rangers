package vm

import (
	"encoding/base64"
	"fmt"
	"math/big"
	"testing"
	"time"

	"com.tuntun.rocket/node/src/common"
	"com.tuntun.rocket/node/src/eth_crypto"
	"com.tuntun.rocket/node/src/middleware/log"
	"github.com/holiman/uint256"
)

func TestVM0(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(0)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b5060ca806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632beaa90f14603757806387db03b7146053575b600080fd5b603d607e565b6040518082815260200191505060405180910390f35b607c60048036036020811015606757600080fd5b81019080803590602001909291905050506087565b005b60008054905090565b80600054016000819055505056fea265627a7a72315820dd06e5c6466fd6226b1d4db2bfa83033ef4a09278a8cd2f8efde275770f29e8a64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v\n", createResult)
	fmt.Printf("New create contract createLeftGas:%v,createErr:%v\n", createLeftGas, createErr)

	//invoke add
	input := common.Hex2Bytes("87db03b70000000000000000000000000000000000000000000000000000000000000003")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,callLeftGas:%v,callErr:%v\n", callResult, callLeftGas, callErr)

	//invoke get
	input = common.Hex2Bytes("2beaa90f")
	callResult, callLeftGas, callErr = mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,callLeftGas:%v,callErr:%v\n", callResult, callLeftGas, callErr)
	//stateDB := config.State
}

func TestVM1(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610283806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d56562c1461005c5780632beaa90f146100a05780635b3357d2146100be5780636271f50e146100dc578063d4b6f21c14610128575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610146565b005b6100a861018a565b6040518082815260200191505060405180910390f35b6100c6610193565b6040518082815260200191505060405180910390f35b610126600480360360808110156100f257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506101d4565b005b61013061020d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b836000540160008190555082600054036000819055508160005402600081905550806000548161020057fe5b0560008190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820d99c4e269ce7a3842ef1d4ed91588b73c5883a822de11215136baf18c0761dcc64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("6271f50e000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000002")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM2(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610283806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d56562c1461005c5780632beaa90f146100a05780635b3357d2146100be5780636271f50e146100dc578063d4b6f21c14610128575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610146565b005b6100a861018a565b6040518082815260200191505060405180910390f35b6100c6610193565b6040518082815260200191505060405180910390f35b610126600480360360808110156100f257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506101d4565b005b61013061020d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b836000540160008190555082600054036000819055508160005402600081905550806000548161020057fe5b0560008190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820d99c4e269ce7a3842ef1d4ed91588b73c5883a822de11215136baf18c0761dcc64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("0d56562c000000000000000000000000f89eebcc07e820f5a8330f52111fa51dd9dfb925")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	stateDB := config.State
	addr := common.HexToAddress("0xf89eebcc07e820f5a8330f52111fa51dd9dfb925")
	stateDB.SetBalance(addr, big.NewInt(5))

	input2 := common.Hex2Bytes("5b3357d2")
	callResult2, callLeftGas2, callErr2 := mockCall(contractAddress, input2, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult2, config.GasLimit-callLeftGas2, callErr2)

	input3 := common.Hex2Bytes("d4b6f21c")
	callResult3, callLeftGas3, callErr3 := mockCall(contractAddress, input3, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult3, config.GasLimit-callLeftGas3, callErr3)

}

func TestVM3(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610393806100246000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d56562c146100675780632beaa90f146100ab5780635b3357d2146100c95780636271f50e146100e7578063c667a2f314610133578063d4b6f21c146101fc575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021a565b005b6100b361025e565b6040518082815260200191505060405180910390f35b6100d1610267565b6040518082815260200191505060405180910390f35b610131600480360360808110156100fd57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102a8565b005b6101e260048036036101c081101561014a57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102e1565b604051808215151515815260200191505060405180910390f35b61020461031d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b83600054016000819055508260005403600081905550816000540260008190555080600054816102d457fe5b0560008190555050505050565b60008b9c50899a508798508596508394508192508d8f1115610306576001905061030b565b600090505b9e9d5050505050505050505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820c86eab4397d623e08f37b570d296bd75678ba8161e97d34122d738bb0e76dd3464736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("c667a2f3000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000d000000000000000000000000000000000000000000000000000000000000000e")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM4(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052735c602ec7b8de713d6106da7d1db1fd7bfcc2d4d46000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006557600080fd5b5060405162001c9938038062001c9983398181016040526200008b9190810190620000f2565b600060028190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200016c565b600081519050620000ec8162000152565b92915050565b6000602082840312156200010557600080fd5b60006200011584828501620000db565b91505092915050565b60006200012b8262000132565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200015d816200011e565b81146200016957600080fd5b50565b611b1d806200017c6000396000f3fe6080604052600436106100555760003560e01c8063046b290814610057578063999635a11461006e578063ad88be6e14610097578063b2b57a26146100c0578063da68b4b4146100e9578063eb185c50146100f3575b005b34801561006357600080fd5b5061006c61010f565b005b34801561007a57600080fd5b5061009560048036036100909190810190611327565b61014a565b005b3480156100a357600080fd5b506100be60048036036100b9919081019061123e565b610369565b005b3480156100cc57600080fd5b506100e760048036036100e29190810190611327565b61055c565b005b6100f161074e565b005b61010d600480360361010891908101906111fd565b610796565b005b7f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516101409190611754565b60405180910390a1565b846001600254011461015b57600080fd5b600084511161016957600080fd5b835183511461017757600080fd5b835182511461018557600080fd5b606060008090505b85518110156101c85760606101b5838884815181106101a857fe5b60200260200101516107e1565b905080925050808060010191505061018d565b506060868286866040516020016101e2949392919061160d565b6040516020818303038152906040529050600081805190602001209050610209818561092a565b61021557505050610362565b60008090505b87518110156103125786818151811061023057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc87838151811061025d57fe5b60200260200101519081150290604051600060405180830381858888f19350505050158015610290573d6000803e3d6000fd5b507fe04d47d3054af1f047151ee17798cebe92f604635034315e4fcab7b2d7a66ef98882815181106102be57fe5b60200260200101518883815181106102d257fe5b60200260200101518884815181106102e657fe5b60200260200101516040516102fd93929190611716565b60405180910390a1808060010191505061021b565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516103569190611754565b60405180910390a15050505b5050505050565b856001600254011461037a57600080fd5b600084511161038857600080fd5b835183511461039657600080fd5b83518251146103a457600080fd5b606060008090505b85518110156103e75760606103d4838884815181106103c757fe5b60200260200101516107e1565b90508092505080806001019150506103ac565b50606087828686604051602001610401949392919061160d565b6040516020818303038152906040529050600081805190602001209050610428818561092a565b61043457505050610554565b60008090505b8751811015610504578873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88838151811061046b57fe5b602002602001015188848151811061047f57fe5b60200260200101516040518363ffffffff1660e01b81526004016104a492919061166a565b602060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104f691908101906111d4565b50808060010191505061043a565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516105489190611754565b60405180910390a15050505b505050505050565b846001600254011461056d57600080fd5b600084511161057b57600080fd5b835183511461058957600080fd5b835182511461059757600080fd5b606060008090505b85518110156105da5760606105c7838884815181106105ba57fe5b60200260200101516107e1565b905080925050808060010191505061059f565b506060868286866040516020016105f4949392919061160d565b604051602081830303815290604052905060008180519060200120905061061b818561092a565b61062757505050610747565b60008090505b87518110156106f7576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88838151811061067f57fe5b602002602001015188848151811061069357fe5b60200260200101516040518363ffffffff1660e01b81526004016106b892919061166a565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050808060010191505061062d565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c060025460405161073b9190611754565b60405180910390a15050505b5050505050565b6000341161075b57600080fd5b7fb61b60bb8d6b946262c1546b50b6e216393eb147c9d267ea7d123d9aafd5483a333460405161078c92919061166a565b60405180910390a1565b600034116107a357600080fd5b7f6cf43ed1a9dd396df89c54be8a0dacaf939f1afdc5dc17a37974d01665ad2d478133346040516107d6939291906116d8565b60405180910390a150565b6060808390506060839050606081518351016040519080825280601f01601f1916602001820160405280156108255781602001600182028038833980820191505090505b5090506060819050600080905060008090505b85518110156108a65785818151811061084d57fe5b602001015160f81c60f81b83838060010194508151811061086a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610838565b5060008090505b845181101561091b578481815181106108c257fe5b602001015160f81c60f81b8383806001019450815181106108df57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506108ad565b50829550505050505092915050565b6000610934610da0565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309a9d76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d491908101906111ab565b90507fe821288434e942492293d0b381bb8e705c32fa88ff6a7978ea1a399fde4a7e6d81600060038110610a0457fe5b6020020151604051610a16919061164f565b60405180910390a16000809050610a2b610dc2565b60008090505b8551811015610b45576000610a5988888481518110610a4c57fe5b6020026020010151610b68565b9050600080905060008090505b83811015610ac8578273ffffffffffffffffffffffffffffffffffffffff16858260048110610a9157fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415610abb5760019150610ac8565b8080600101915050610a66565b506001811415610ad9575050610b38565b81848460048110610ae657fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610b278683610bd9565b15610b355784806001019550505b50505b8080600101915050610a31565b5060028210610b5a5760019350505050610b62565b600093505050505b92915050565b600080610b80610b7b8460006020610c51565b610d05565b90506000610b98610b9385602080610c51565b610d05565b90506000610ba98560406001610c51565b600081518110610bb557fe5b602001015160f81c60f81b9050610bce86848484610d13565b935050505092915050565b600080600090505b6004811015610c45578273ffffffffffffffffffffffffffffffffffffffff16848260038110610c0d57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415610c38576001915050610c4b565b8080600101915050610be1565b50600090505b92915050565b606080826040519080825280601f01601f191660200182016040528015610c875781602001600182028038833980820191505090505b50905060008090505b83811015610cf9578585820181518110610ca657fe5b602001015160f81c60f81b828281518110610cbd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610c90565b50809150509392505050565b600060208201519050919050565b6000808260f81c905060008360f81c60ff161480610d37575060018360f81c60ff16145b15610d4657601b8360f81c0190505b60018682878760405160008152602001604052604051610d699493929190611693565b6020604051602081039080840390855afa158015610d8b573d6000803e3d6000fd5b50505060206040510351915050949350505050565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b600081359050610df381611a7e565b92915050565b600081519050610e0881611a7e565b92915050565b600081359050610e1d81611a95565b92915050565b600082601f830112610e3457600080fd5b6003610e47610e428261179c565b61176f565b91508183856020840282011115610e5d57600080fd5b60005b83811015610e8d5781610e738882610df9565b845260208401935060208301925050600181019050610e60565b5050505092915050565b600082601f830112610ea857600080fd5b8135610ebb610eb6826117be565b61176f565b91508181835260208401935060208101905083856020840282011115610ee057600080fd5b60005b83811015610f105781610ef68882610e0e565b845260208401935060208301925050600181019050610ee3565b5050505092915050565b600082601f830112610f2b57600080fd5b8135610f3e610f39826117e6565b61176f565b9150818183526020840193506020810190508360005b83811015610f845781358601610f6a888261109a565b845260208401935060208301925050600181019050610f54565b5050505092915050565b600082601f830112610f9f57600080fd5b8135610fb2610fad8261180e565b61176f565b9150818183526020840193506020810190508360005b83811015610ff85781358601610fde88826110ee565b845260208401935060208301925050600181019050610fc8565b5050505092915050565b600082601f83011261101357600080fd5b813561102661102182611836565b61176f565b9150818183526020840193506020810190508385602084028201111561104b57600080fd5b60005b8381101561107b57816110618882611196565b84526020840193506020830192505060018101905061104e565b5050505092915050565b60008151905061109481611aac565b92915050565b600082601f8301126110ab57600080fd5b81356110be6110b98261185e565b61176f565b915080825260208301602083018583830111156110da57600080fd5b6110e5838284611a21565b50505092915050565b600082601f8301126110ff57600080fd5b813561111261110d8261188a565b61176f565b9150808252602083016020830185838301111561112e57600080fd5b611139838284611a21565b50505092915050565b600082601f83011261115357600080fd5b8135611166611161826118b6565b61176f565b9150808252602083016020830185838301111561118257600080fd5b61118d838284611a21565b50505092915050565b6000813590506111a581611ac3565b92915050565b6000606082840312156111bd57600080fd5b60006111cb84828501610e23565b91505092915050565b6000602082840312156111e657600080fd5b60006111f484828501611085565b91505092915050565b60006020828403121561120f57600080fd5b600082013567ffffffffffffffff81111561122957600080fd5b61123584828501611142565b91505092915050565b60008060008060008060c0878903121561125757600080fd5b600061126589828a01611196565b965050602061127689828a01610de4565b955050604087013567ffffffffffffffff81111561129357600080fd5b61129f89828a01610f8e565b945050606087013567ffffffffffffffff8111156112bc57600080fd5b6112c889828a01610e97565b935050608087013567ffffffffffffffff8111156112e557600080fd5b6112f189828a01611002565b92505060a087013567ffffffffffffffff81111561130e57600080fd5b61131a89828a01610f1a565b9150509295509295509295565b600080600080600060a0868803121561133f57600080fd5b600061134d88828901611196565b955050602086013567ffffffffffffffff81111561136a57600080fd5b61137688828901610f8e565b945050604086013567ffffffffffffffff81111561139357600080fd5b61139f88828901610e97565b935050606086013567ffffffffffffffff8111156113bc57600080fd5b6113c888828901611002565b925050608086013567ffffffffffffffff8111156113e557600080fd5b6113f188828901610f1a565b9150509295509295909350565b600061140a838361143d565b60208301905092915050565b600061142283836115d8565b60208301905092915050565b611437816119eb565b82525050565b6114468161198c565b82525050565b6114558161197a565b82525050565b600061146682611902565b6114708185611948565b935061147b836118e2565b8060005b838110156114ac57815161149388826113fe565b975061149e8361192e565b92505060018101905061147f565b5085935050505092915050565b60006114c48261190d565b6114ce8185611953565b93506114d9836118f2565b8060005b8381101561150a5781516114f18882611416565b97506114fc8361193b565b9250506001810190506114dd565b5085935050505092915050565b611520816119aa565b82525050565b600061153182611923565b61153b818561195e565b935061154b818560208601611a30565b61155481611a6d565b840191505092915050565b600061156a82611923565b611574818561196f565b9350611584818560208601611a30565b80840191505092915050565b600061159b82611918565b6115a5818561195e565b93506115b5818560208601611a30565b6115be81611a6d565b840191505092915050565b6115d2816119d4565b82525050565b6115e1816119d4565b82525050565b6115f86115f3826119d4565b611a63565b82525050565b611607816119de565b82525050565b600061161982876115e7565b602082019150611629828661155f565b9150611635828561145b565b915061164182846114b9565b915081905095945050505050565b6000602082019050611664600083018461144c565b92915050565b600060408201905061167f600083018561142e565b61168c60208301846115c9565b9392505050565b60006080820190506116a86000830187611517565b6116b560208301866115fe565b6116c26040830185611517565b6116cf6060830184611517565b95945050505050565b600060608201905081810360008301526116f28186611526565b9050611701602083018561142e565b61170e60408301846115c9565b949350505050565b600060608201905081810360008301526117308186611590565b905061173f602083018561142e565b61174c60408301846115c9565b949350505050565b600060208201905061176960008301846115c9565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561179257600080fd5b8060405250919050565b600067ffffffffffffffff8211156117b357600080fd5b602082029050919050565b600067ffffffffffffffff8211156117d557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156117fd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561182557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561184d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561187557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156118a157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156118cd57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611985826119b4565b9050919050565b6000611997826119b4565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006119f6826119fd565b9050919050565b6000611a0882611a0f565b9050919050565b6000611a1a826119b4565b9050919050565b82818337600083830152505050565b60005b83811015611a4e578082015181840152602081019050611a33565b83811115611a5d576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b611a878161197a565b8114611a9257600080fd5b50565b611a9e8161198c565b8114611aa957600080fd5b50565b611ab58161199e565b8114611ac057600080fd5b50565b611acc816119d4565b8114611ad757600080fd5b5056fea365627a7a723158207a4a6d7944acd950c4876c6760d5b0fe976a7e962ad8d98f66f589a2afa5eb806c6578706572696d656e74616cf564736f6c63430005110040000000000000000000000000253D2C464d6c0bF52e7ea5E798B87912d99303bd")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)
	//-------------------CALL 1----------------
	input := common.Hex2Bytes("da68b4b4")

	stateDB := config.State
	addr := common.HexToAddress("0x0f656deb14f9666d3fdf9dff7c1c430c0570223f10900c89c94a79324ad24085")
	stateDB.SetBalance(addr, big.NewInt(5))

	config.Value = big.NewInt(1)
	config.Origin = addr
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
	//-------CALL 2 ---------------------
	input2 := common.Hex2Bytes("eb185c50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000056162636465000000000000000000000000000000000000000000000000000000")

	addr = common.HexToAddress("0x0f656deb14f9666d3fdf9dff7c1c430c0570223f10900c89c94a79324ad24084")
	stateDB.SetBalance(addr, big.NewInt(5))

	config.Value = big.NewInt(2)
	config.Origin = addr
	callResult2, callLeftGas2, callErr2 := mockCall(contractAddress, input2, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult2, config.GasLimit-callLeftGas2, callErr2)
}

func TestVM5(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("608060405234801561001057600080fd5b50610223806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639db8d7d514610030575b600080fd5b61005c6004803603602081101561004657600080fd5b810190808035906020019092919050505061005e565b005b60606040518060200161007090610106565b6020820181038252601f19601f820116604052509050600081518381602085016000f59150507fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e18184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505050565b60e5806101138339019056fe6080604052736a47c06bcfabc079e4c3b196a47f3b5a2fa998b96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ead5853f4d54d0718c568a589f0087c5eb385645600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060025534801560bd57600080fd5b50600160025401600281905550600073ffffffffffffffffffffffffffffffffffffffff16fffea165627a7a72305820819896a9eac1488592d8328ef846692c4cb6c760d247250e56013d5ca20d6e760029")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("9db8d7d50000000000000000000000000000000000000000000000000000000000000001")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestCreate2Address(t *testing.T) {
	salt := uint256.NewInt()
	salt.SetUint64(1)

	addr := common.HexToAddress("0x616fe1518d70c3d3a4d10c89005f29db05979b31000000000000000000000000")

	code := common.Hex2Bytes("6080604052736a47c06bcfabc079e4c3b196a47f3b5a2fa998b96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ead5853f4d54d0718c568a589f0087c5eb385645600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060025534801560bd57600080fd5b50600160025401600281905550600073ffffffffffffffffffffffffffffffffffffffff16fffe")
	codeAndHash := &codeAndHash{code: code}

	fmt.Printf("code:%v\n", codeAndHash.Hash().Bytes())
	fmt.Printf("addr:%v\n", addr.Bytes())
	fmt.Printf("salt:%v\n", salt.Bytes32())
	contractAddr := crypto.CreateAddress2(addr, common.Hash(salt.Bytes32()), codeAndHash.Hash().Bytes())
	fmt.Printf("create2 contract addr:%v", contractAddr.Bytes())
}

func TestVM6(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052348015600f57600080fd5b506103ac8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b610038610052565b604051808215151515815260200191505060405180910390f35b600080600360050690507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a16000600460050790507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a1600081831390507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160008060011890507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160003090507fe821288434e942492293d0b381bb8e705c32fa88ff6a7978ea1a399fde4a7e6d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160003290507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160003a90507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a16000600140905060004190507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004390507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004290507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004490507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004590507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160019d50505050505050505050505050509056fea265627a7a723158208f072ad16ca9bcf60e7483559e58f66b1dd625c0eb10201e3846e1c9dbdd62e064736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract createResult:%s,%d\n", string(createResult), len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	//input := common.Hex2Bytes("f8a8fd6d")
	//callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	//fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM7(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.Origin = common.HexToAddress("0x407988d14785a6ae45e3106b4f9799c0ab0af3d0c85447ce1ddb09f089872257")
	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	////部署NonFungibleMock合约
	contractCodeBytes := common.Hex2Bytes("6060604052341561000f57600080fd5b6108328061001e6000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009e5780631051db34146100e057806318160ddd1461010d57806323b872dd146101365780634707f44f146101975780636352211e146101ed57806370a08231146102505780639cbf9e361461029d578063a9059cbb146102c6575b600080fd5b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610308565b005b34156100eb57600080fd5b6100f3610373565b604051808215151515815260200191505060405180910390f35b341561011857600080fd5b61012061037c565b6040518082815260200191505060405180910390f35b341561014157600080fd5b610195600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610388565b005b34156101a257600080fd5b6101d7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610409565b6040518082815260200191505060405180910390f35b34156101f857600080fd5b61020e60048080359060200190919050506104f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025b57600080fd5b610287600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610535565b6040518082815260200191505060405180910390f35b34156102a857600080fd5b6102b06105f4565b6040518082815260200191505060405180910390f35b34156102d157600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061069b565b005b6103123382610706565b151561031d57600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006001905090565b60008080549050905090565b6103923382610747565b151561039d57600080fd5b6103a78382610706565b15156103b257600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806000809150600090505b61041e61037c565b8110156104eb578473ffffffffffffffffffffffffffffffffffffffff1660016000808481548110151561044e57fe5b906000526020600020900160000154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104de57838214156104d5576000818154811015156104bf57fe5b90600052602060002090016000015492506104f0565b81806001019250505b8080600101915050610416565b600092505b505092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806000809150600090505b61054a61037c565b8110156105ea578373ffffffffffffffffffffffffffffffffffffffff1660016000808481548110151561057a57fe5b906000526020600020900160000154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105dd5781806001019250505b8080600101915050610542565b8192505050919050565b60008060016000805490500190506000805480600101828161061691906107b3565b9160005260206000209001600060206040519081016040528085815250909190915060008201518160000155505050336001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505090565b6106a53382610706565b15156106b057600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff16610728836104f8565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b8154818355818115116107da578183600052602060002091820191016107d991906107df565b5b505050565b61080391905b808211156107ff57600080820160009055506001016107e5565b5090565b905600a165627a7a72305820430c247aedd9e4dbe363a3bfe30144f010f5de1d6e9674b31a082e5b3cbf18080029")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract createResult:%s,%d\n", common.ToHex(createResult), len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	////部署ClockAuction(NonFungibleMock.address,0)合约
	////nonFungibleMockAddress := common.HexToAddress("0x9db09e8b334726a9500932b7b878e41eddb4b069")
	//
	//contractCodeBytes1 := common.Hex2Bytes("")
	//createResult1, contractAddress1, createLeftGas1, createErr1 := mockCreate(contractCodeBytes1, config)
	//fmt.Printf("New create contract address:%s\n", contractAddress1.GetHexString())
	//fmt.Printf("New create contract createResult:%v,%d\n", createResult1, len(createResult1))
	//fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas1, createErr1)
	//
	//auctionAddress := common.HexToAddress("0x1261365b2f50501ce0629c933a55f153599f953f")
	//b := config.State.GetCode(auctionAddress)
	//fmt.Printf("b:%v\n", b)
	//input := common.Hex2Bytes("8da5cb5b")
	//callResult, callLeftGas, callErr := mockCall(auctionAddress, input, config)
	//fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

}

func TestVM8(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052348015600f57600080fd5b5060606040518060400160405280600781526020017f6e66744e616d6500000000000000000000000000000000000000000000000000815250905060606040518060400160405280600981526020017f6e667453796d626f6c0000000000000000000000000000000000000000000000815250905060006103e790506000838383e090505050505060518060a46000396000f3fe6080604052600080fdfea264697066735822122062d45ee11410a296edf3c7ca4865bf7a3617239b50bf8aa4a0e080acc5e3234b64736f6c6375302e372e352b636f6d6d69742e65623737656430380045")

	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	//input := common.Hex2Bytes("f8a8fd6d")
	//callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	//fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM9(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.Origin = common.HexToAddress("0x407988d14785a6ae45e3106b4f9799c0ab0af3d0c85447ce1ddb09f089872257")
	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052348015600f57600080fd5b507f783c97346bdcede2b50fe39d9f5696111f799637a564a872dd07a494c0d3f9996040518080602001828103825260058152602001807f616263646500000000000000000000000000000000000000000000000000000081525060200191505060405180910390a1603e8060856000396000f3fe6080604052600080fdfea265627a7a72315820f65b0dea3b304ca914cde52db0f108dc3c8b304e252470889d732b2eaf42ffa064736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract createResult:%s,%d\n", common.ToHex(createResult), len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)
}

func TestAddress(t *testing.T) {
	addr := common.HexToAddress("0xbfaf6e5211f2c4aff8eeccf0bdf6965cb7d37e88bb6244ab08c77bf055497302")
	fmt.Printf("addr:%v\n", addr.Bytes()[:20])
	i := new(uint256.Int).SetBytes(addr.Bytes()[:20])
	fmt.Printf("i:%v\n", i.Bytes32())

	a := i.Bytes20()
	address := common.Address{}
	copy(address[:], a[:])
	fmt.Printf("address:%v\n", address.Bytes())
	fmt.Printf("addr:%v\n", addr.Bytes()[:20])
}

func TestConvertAddress(t *testing.T) {
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  234 ,234 ,95 ,168, 10, 140 ,4, 214, 122 ,50 ,136, 179 ,33, 19, 100, 28 ,242, 17 ,101, 62}
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 170, 71, 139, 53, 89, 84, 23, 188, 185, 14, 245, 111, 23, 78, 224, 90, 229, 108, 40}
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181, 14, 173, 231 ,17, 233 ,234, 204, 62 ,32, 210 ,114, 33 ,12 ,98 ,133, 62, 45 ,77, 211}
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,88 ,36 ,172, 14 ,186 ,150, 250, 173, 207 ,241 ,33 ,209 ,38 ,11, 54, 230 ,246 ,67 ,207, 86}
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,137, 101 ,199, 110 ,10, 16, 56, 98, 182, 236, 117 ,130, 170 ,31, 190 ,10 ,225 ,78, 214, 48}
	new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 118, 77, 0, 133, 48, 54, 31, 85, 36, 107, 199, 154, 98, 255, 12, 72, 188, 90, 166}
	newAddr := common.BytesToAddress(new)
	fmt.Printf("newAddr:%v\n", newAddr.GetHexString())
}

func TestByteToInt(t *testing.T) {
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0 ,0, 0 ,0 ,0, 0 ,0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 134, 242 ,111, 193 ,0, 0}
	//new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 141, 126, 164, 198, 128, 0}
	new := []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 241, 228, 202, 163, 130, 95}
	i := big.NewInt(0)
	i.SetBytes(new)
	fmt.Printf("i:%v\n", i.String())

}
func TestERC20(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.Origin = common.HexToAddress("0x50f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	config.State.SetBalance(config.Origin, big.NewInt(1000))

	var input, callResult []byte
	var callLeftGas uint64
	var callErr error
	mixContract := common.HexToAddress("0xbfdb68fde47566caa49bfdc18f20c61eceb11005")

	//部署mixToken 0xbfdb68fde47566caa49bfdc18f20c61eceb11005
	codeBinary := "60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4d69786d617276656c00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4958000000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000989291906200058f565b508160049080519060200190620000b19291906200058f565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000122336200014560201b60201c565b6200013f336a084595161401484a0000006200026460201b60201c565b62000635565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000324576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6200033682826200033a60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620003fa816002546200050660201b62000ffd1790919060201c565b6002819055506200045981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200050660201b62000ffd1790919060201c565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d257805160ff191683800117855562000603565b8280016001018555821562000603579182015b8281111562000602578251825591602001919060010190620005e5565b5b50905062000612919062000616565b5090565b5b808211156200063157600081600090555060010162000617565b5090565b6118f180620006456000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635aa6e675116100a2578063a457c2d711610071578063a457c2d714610503578063a9059cbb14610567578063ab033ea9146105cb578063dd62ed3e1461060f578063f46eccc4146106875761010b565b80635aa6e675146103b057806370a08231146103e457806395d89b411461043c578063983b2d56146104bf5761010b565b80633092afd5116100de5780633092afd514610299578063313ce567146102dd57806339509351146102fe57806340c10f19146103625761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f757806323b872dd14610215575b600080fd5b6101186106e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610783565b60405180821515815260200191505060405180910390f35b6101ff6107a1565b6040518082815260200191505060405180910390f35b6102816004803603606081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ab565b60405180821515815260200191505060405180910390f35b6102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610883565b005b6102e56109a1565b604051808260ff16815260200191505060405180910390f35b61034a6004803603604081101561031457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b8565b60405180821515815260200191505060405180910390f35b6103ae6004803603604081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a6a565b005b6103b8610b37565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610426600480360360208110156103fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b5d565b6040518082815260200191505060405180910390f35b610444610ba6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610484578082015181840152602081019050610469565b50505050905090810190601f1680156104b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610501600480360360208110156104d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c48565b005b61054f6004803603604081101561051957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d66565b60405180821515815260200191505060405180910390f35b6105b36004803603604081101561057d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e32565b60405180821515815260200191505060405180910390f35b61060d600480360360208110156105e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e50565b005b6106716004803603604081101561062557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f57565b6040518082815260200191505060405180910390f35b6106c96004803603602081101561069d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdd565b60405180821515815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050905090565b6000610797610790611085565b848461108d565b6001905092915050565b6000600254905090565b60006107b8848484611283565b610878846107c4611085565b61087385604051806060016040528060288152602001611826602891396000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610829611085565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b61108d565b600190509392505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900460ff16905090565b6000610a606109c5611085565b84610a5b856000806109d5611085565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ffd90919063ffffffff16565b61108d565b6001905092915050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b29576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610b3382826115fd565b5050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c3e5780601f10610c1357610100808354040283529160200191610c3e565b820191906000526020600020905b815481529060010190602001808311610c2157829003601f168201915b5050505050905090565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000610e28610d73611085565b84610e238560405180606001604052806025815260200161189760259139600080610d9c611085565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b61108d565b6001905092915050565b6000610e46610e3f611085565b8484611283565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b60008082840190508381101561107b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611113576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806118736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117de6022913960400191505060405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061184e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561138f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117bb6023913960400191505060405180910390fd5b6113fb8160405180606001604052806026815260200161180060269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061149081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ffd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115af578082015181840152602081019050611594565b50505050905090810190601f1680156115dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6116b581600254610ffd90919063ffffffff16565b60028190555061170d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ffd90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122091d1e3f0d76ee20dad361c07b4a494000543ec8b2ef80285be2e5157aa0fa88f64736f6c634300060c0033"
	// "60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4d69786d617276656c00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4958000000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000989291906200058d565b508160049080519060200190620000b19291906200058d565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000122336200014560201b60201c565b6200013f336a084595161401484a0000006200026460201b60201c565b62000633565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000324576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6200033682826200033a60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620003fa816002546200050460201b620010001790919060201c565b60028190555062000458816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200050460201b620010001790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d057805160ff191683800117855562000601565b8280016001018555821562000601579182015b8281111562000600578251825591602001919060010190620005e3565b5b50905062000610919062000614565b5090565b5b808211156200062f57600081600090555060010162000615565b5090565b6118ef80620006436000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635aa6e675116100a2578063a457c2d711610071578063a457c2d714610503578063a9059cbb14610567578063ab033ea9146105cb578063dd62ed3e1461060f578063f46eccc4146106875761010b565b80635aa6e675146103b057806370a08231146103e457806395d89b411461043c578063983b2d56146104bf5761010b565b80633092afd5116100de5780633092afd514610299578063313ce567146102dd57806339509351146102fe57806340c10f19146103625761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f757806323b872dd14610215575b600080fd5b6101186106e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610783565b60405180821515815260200191505060405180910390f35b6101ff6107a1565b6040518082815260200191505060405180910390f35b6102816004803603606081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ab565b60405180821515815260200191505060405180910390f35b6102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610884565b005b6102e56109a2565b604051808260ff16815260200191505060405180910390f35b61034a6004803603604081101561031457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b9565b60405180821515815260200191505060405180910390f35b6103ae6004803603604081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a6c565b005b6103b8610b39565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610426600480360360208110156103fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b5f565b6040518082815260200191505060405180910390f35b610444610ba7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610484578082015181840152602081019050610469565b50505050905090810190601f1680156104b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610501600480360360208110156104d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c49565b005b61054f6004803603604081101561051957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b60405180821515815260200191505060405180910390f35b6105b36004803603604081101561057d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e34565b60405180821515815260200191505060405180910390f35b61060d600480360360208110156105e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e52565b005b6106716004803603604081101561062557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f59565b6040518082815260200191505060405180910390f35b6106c96004803603602081101561069d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe0565b60405180821515815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050905090565b6000610797610790611088565b8484611090565b6001905092915050565b6000600254905090565b60006107b8848484611287565b610879846107c4611088565b6108748560405180606001604052806028815260200161182460289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061082a611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b611090565b600190509392505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900460ff16905090565b6000610a626109c6611088565b84610a5d85600160006109d7611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b611090565b6001905092915050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610b3582826115fd565b5050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b5050505050905090565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000610e2a610d74611088565b84610e25856040518060600160405280602581526020016118956025913960016000610d9e611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b611090565b6001905092915050565b6000610e48610e41611088565b8484611287565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b60008082840190508381101561107e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806118716024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561119c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117dc6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061184c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611393576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117b96023913960400191505060405180910390fd5b6113fe816040518060600160405280602681526020016117fe602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611491816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115af578082015181840152602081019050611594565b50505050905090810190601f1680156115dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6116b58160025461100090919063ffffffff16565b60028190555061170c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206bcc014fa94a13b23a66eb50f566266aeefcd5a3f652526cba894f975217690064736f6c634300060c0033"
	imTokenCodeBytes := common.Hex2Bytes(codeBinary)
	_, mixTokenContractAddress, _, createErr := mockCreate(imTokenCodeBytes, config)
	fmt.Printf("Create mixToken contract address:%v,createErr:%v\n", mixTokenContractAddress.GetHexString(), createErr)

	//mixTokenContract.transfer(pool.address, 1000);
	input = common.Hex2Bytes("a9059cbb0000000000000000000000007303204139749c46f8256c13ddae1e1a8a47c2a200000000000000000000000000000000000000000000000000000000000003e8")
	callResult, callLeftGas, callErr = mockCall(mixContract, input, config)
	fmt.Printf("mix transfer 1000 to pool result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestDefiDemo(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.Origin = common.HexToAddress("0x50f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	config.State.SetBalance(config.Origin, big.NewInt(1000))

	var input, callResult []byte
	var callLeftGas uint64
	var callErr error
	lpContract := common.HexToAddress("0xd8c59bbc68b982fab30435d8379c48afe1bd067f")
	mixContract := common.HexToAddress("0xbfdb68fde47566caa49bfdc18f20c61eceb11005")
	poolContract := common.HexToAddress("0x7303204139749c46f8256c13ddae1e1a8a47c2a2")

	//部署LpToken 0xd8c59bbc68b982fab30435d8379c48afe1bd067f
	lpTokenCodeBytes := common.Hex2Bytes("606060405260408051908101604052600d81527f57726170706564204574686572000000000000000000000000000000000000006020820152600090805161004b9291602001906100b1565b5060408051908101604052600481527f5745544800000000000000000000000000000000000000000000000000000000602082015260019080516100939291602001906100b1565b506002805460ff1916601217905534156100ac57600080fd5b61014c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100f257805160ff191683800117855561011f565b8280016001018555821561011f579182015b8281111561011f578251825591602001919060010190610104565b5061012b92915061012f565b5090565b61014991905b8082111561012b5760008155600101610135565b90565b6106c28061015b6000396000f3006060604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b8578063095ea7b31461014257806318160ddd1461017857806323b872dd1461019d5780632e1a7d4d146101c5578063313ce567146101db57806370a082311461020457806395d89b4114610223578063a9059cbb14610236578063d0e30db0146100ae578063dd62ed3e14610258575b6100b661027d565b005b34156100c357600080fd5b6100cb6102d3565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101075780820151838201526020016100ef565b50505050905090810190601f1680156101345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014d57600080fd5b610164600160a060020a0360043516602435610371565b604051901515815260200160405180910390f35b341561018357600080fd5b61018b6103dd565b60405190815260200160405180910390f35b34156101a857600080fd5b610164600160a060020a03600435811690602435166044356103eb565b34156101d057600080fd5b6100b6600435610531565b34156101e657600080fd5b6101ee6105df565b60405160ff909116815260200160405180910390f35b341561020f57600080fd5b61018b600160a060020a03600435166105e8565b341561022e57600080fd5b6100cb6105fa565b341561024157600080fd5b610164600160a060020a0360043516602435610665565b341561026357600080fd5b61018b600160a060020a0360043581169060243516610679565b600160a060020a033316600081815260036020526040908190208054349081019091557fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c915190815260200160405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b505050505081565b600160a060020a03338116600081815260046020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b600160a060020a0330163190565b600160a060020a0383166000908152600360205260408120548290101561041157600080fd5b33600160a060020a031684600160a060020a03161415801561045b5750600160a060020a038085166000908152600460209081526040808320339094168352929052205460001914155b156104c257600160a060020a03808516600090815260046020908152604080832033909416835292905220548290101561049457600080fd5b600160a060020a03808516600090815260046020908152604080832033909416835292905220805483900390555b600160a060020a038085166000818152600360205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600160a060020a0333166000908152600360205260409020548190101561055757600080fd5b600160a060020a033316600081815260036020526040908190208054849003905582156108fc0290839051600060405180830381858888f19350505050151561059f57600080fd5b33600160a060020a03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658260405190815260200160405180910390a250565b60025460ff1681565b60036020526000908152604090205481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103695780601f1061033e57610100808354040283529160200191610369565b60006106723384846103eb565b9392505050565b6004602090815260009283526040808420909152908252902054815600a165627a7a7230582061a0f876a7e6a3343d73ff166107d03a1ea1a6348b0f1f231e0514b464b35e450029")
	_, lpTokenContractAddress, _, createErr := mockCreate(lpTokenCodeBytes, config)
	fmt.Printf("Create lpToken contract address:%v,createErr:%v\n", lpTokenContractAddress.GetHexString(), createErr)

	//部署mixToken 0xbfdb68fde47566caa49bfdc18f20c61eceb11005
	imTokenCodeBytes := common.Hex2Bytes("60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4d69786d617276656c00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4958000000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620000989291906200058d565b508160049080519060200190620000b19291906200058d565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000122336200014560201b60201c565b6200013f336a084595161401484a0000006200026460201b60201c565b62000633565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000324576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6200033682826200033a60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620003fa816002546200050460201b620010001790919060201c565b60028190555062000458816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200050460201b620010001790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d057805160ff191683800117855562000601565b8280016001018555821562000601579182015b8281111562000600578251825591602001919060010190620005e3565b5b50905062000610919062000614565b5090565b5b808211156200062f57600081600090555060010162000615565b5090565b6118ef80620006436000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635aa6e675116100a2578063a457c2d711610071578063a457c2d714610503578063a9059cbb14610567578063ab033ea9146105cb578063dd62ed3e1461060f578063f46eccc4146106875761010b565b80635aa6e675146103b057806370a08231146103e457806395d89b411461043c578063983b2d56146104bf5761010b565b80633092afd5116100de5780633092afd514610299578063313ce567146102dd57806339509351146102fe57806340c10f19146103625761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f757806323b872dd14610215575b600080fd5b6101186106e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610783565b60405180821515815260200191505060405180910390f35b6101ff6107a1565b6040518082815260200191505060405180910390f35b6102816004803603606081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ab565b60405180821515815260200191505060405180910390f35b6102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610884565b005b6102e56109a2565b604051808260ff16815260200191505060405180910390f35b61034a6004803603604081101561031457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b9565b60405180821515815260200191505060405180910390f35b6103ae6004803603604081101561037857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a6c565b005b6103b8610b39565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610426600480360360208110156103fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b5f565b6040518082815260200191505060405180910390f35b610444610ba7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610484578082015181840152602081019050610469565b50505050905090810190601f1680156104b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610501600480360360208110156104d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c49565b005b61054f6004803603604081101561051957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b60405180821515815260200191505060405180910390f35b6105b36004803603604081101561057d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e34565b60405180821515815260200191505060405180910390f35b61060d600480360360208110156105e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e52565b005b6106716004803603604081101561062557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f59565b6040518082815260200191505060405180910390f35b6106c96004803603602081101561069d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe0565b60405180821515815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050905090565b6000610797610790611088565b8484611090565b6001905092915050565b6000600254905090565b60006107b8848484611287565b610879846107c4611088565b6108748560405180606001604052806028815260200161182460289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061082a611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b611090565b600190509392505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900460ff16905090565b6000610a626109c6611088565b84610a5d85600160006109d7611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b611090565b6001905092915050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f216d696e7465720000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610b3582826115fd565b5050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b5050505050905090565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000610e2a610d74611088565b84610e25856040518060600160405280602581526020016118956025913960016000610d9e611088565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b611090565b6001905092915050565b6000610e48610e41611088565b8484611287565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21676f7665726e616e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b60008082840190508381101561107e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806118716024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561119c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117dc6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061184c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611393576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117b96023913960400191505060405180910390fd5b6113fe816040518060600160405280602681526020016117fe602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611491816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115af578082015181840152602081019050611594565b50505050905090810190601f1680156115dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6116b58160025461100090919063ffffffff16565b60028190555061170c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206bcc014fa94a13b23a66eb50f566266aeefcd5a3f652526cba894f975217690064736f6c634300060c0033")
	_, mixTokenContractAddress, _, createErr := mockCreate(imTokenCodeBytes, config)
	fmt.Printf("Create mixToken contract address:%v,createErr:%v\n", mixTokenContractAddress.GetHexString(), createErr)

	//部署Pool 0x7303204139749c46f8256c13ddae1e1a8a47c2a2
	poolCodeBytes := common.Hex2Bytes("60806040526283d600600655600060085560006009553480156200002257600080fd5b506040516200251a3803806200251a833981810160405260408110156200004857600080fd5b81019080805190602001909291908051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620000b5620001cc60201b60201c565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a381600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001c433620001d460201b60201c565b505062000302565b600033905090565b620001e46200029b60201b60201c565b62000257576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620002e6620001cc60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61220880620003126000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80637b0a47ee116100f9578063be32cf8d11610097578063df136d6511610071578063df136d65146105e9578063e9fad8ee14610607578063ebe2b12b14610611578063f2fde38b1461062f576101a8565b8063be32cf8d14610579578063c8f33c91146105ad578063cd3daf9d146105cb576101a8565b80638da58897116100d35780638da58897146104d95780638da5cb5b146104f75780638f32d59b1461052b578063a694fc3a1461054b576101a8565b80637b0a47ee1461044557806380faa57d146104635780638b87634714610481576101a8565b80632e1a7d4d116101665780635fcbd285116101405780635fcbd2851461037757806370a08231146103ab578063715018a6146104035780637a442b3b1461040d576101a8565b80632e1a7d4d146103115780633c6b16ab1461033f5780633d18b9121461036d576101a8565b80628cc262146101ad5780630700037d146102055780630d68b7611461025d578063101114cf146102a157806318160ddd146102d55780631be05289146102f3575b600080fd5b6101ef600480360360208110156101c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610673565b6040518082815260200191505060405180910390f35b6102476004803603602081101561021b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061075a565b6040518082815260200191505060405180910390f35b61029f6004803603602081101561027357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610772565b005b6102a9610830565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102dd610856565b6040518082815260200191505060405180910390f35b6102fb610860565b6040518082815260200191505060405180910390f35b61033d6004803603602081101561032757600080fd5b8101908080359060200190929190505050610866565b005b61036b6004803603602081101561035557600080fd5b8101908080359060200190929190505050610a93565b005b610375610d95565b005b61037f610fec565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ed600480360360208110156103c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611010565b6040518082815260200191505060405180910390f35b61040b611059565b005b6104436004803603604081101561042357600080fd5b810190808035906020019092919080359060200190929190505050611194565b005b61044d61125c565b6040518082815260200191505060405180910390f35b61046b611262565b6040518082815260200191505060405180910390f35b6104c36004803603602081101561049757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611275565b6040518082815260200191505060405180910390f35b6104e161128d565b6040518082815260200191505060405180910390f35b6104ff611293565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105336112bd565b60405180821515815260200191505060405180910390f35b6105776004803603602081101561056157600080fd5b810190808035906020019092919050505061131c565b005b610581611549565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105b561156f565b6040518082815260200191505060405180910390f35b6105d3611575565b6040518082815260200191505060405180910390f35b6105f161160d565b6040518082815260200191505060405180910390f35b61060f611613565b005b61061961162e565b6040518082815260200191505060405180910390f35b6106716004803603602081101561064557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611634565b005b6000610753600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610745670de0b6b3a7640000610737610720600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610712611575565b6116ba90919063ffffffff16565b61072988611010565b61170490919063ffffffff16565b61178a90919063ffffffff16565b6117d490919063ffffffff16565b9050919050565b600d6020528060005260406000206000915090505481565b61077a6112bd565b6107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600154905090565b60065481565b3361086f611575565b600b8190555061087d611262565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461094a576108c081610673565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6007544210156109c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74207374617274000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008211610a38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b610a418261185c565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040518082815260200191505060405180910390a25050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ad461195a565b73ffffffffffffffffffffffffffffffffffffffff1614610b40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121886021913960400191505060405180910390fd5b6000610b4a611575565b600b81905550610b58611262565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2557610b9b81610673565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421115610d18576008544210610c5857610c4d6006548361178a90919063ffffffff16565b600981905550610cba565b6000610c6f426008546116ba90919063ffffffff16565b90506000610c886009548361170490919063ffffffff16565b9050610cb1600654610ca383876117d490919063ffffffff16565b61178a90919063ffffffff16565b60098190555050505b42600a81905550610cd6600654426117d490919063ffffffff16565b6008819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d826040518082815260200191505060405180910390a1610d91565b610d2d6006548361178a90919063ffffffff16565b600981905550600754600a81905550610d536006546007546117d490919063ffffffff16565b6008819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d826040518082815260200191505060405180910390a15b5050565b33610d9e611575565b600b81905550610dac611262565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e7957610def81610673565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421015610ef1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74207374617274000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000610efc33610673565b90506000811115610fe8576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f993382600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119629092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110616112bd565b6110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111d561195a565b73ffffffffffffffffffffffffffffffffffffffff1614611241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121886021913960400191505060405180910390fd5b426007819055508160068190555061125881610a93565b5050565b60095481565b600061127042600854611a04565b905090565b600c6020528060005260406000206000915090505481565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661130061195a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b33611325611575565b600b81905550611333611262565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114005761137681610673565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421015611478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74207374617274000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600082116114ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b6114f782611a1d565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040518082815260200191505060405180910390a25050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600080611580610856565b141561159057600b54905061160a565b6116076115f661159e610856565b6115e8670de0b6b3a76400006115da6009546115cc600a546115be611262565b6116ba90919063ffffffff16565b61170490919063ffffffff16565b61170490919063ffffffff16565b61178a90919063ffffffff16565b600b546117d490919063ffffffff16565b90505b90565b600b5481565b61162461161f33611010565b610866565b61162c610d95565b565b60085481565b61163c6112bd565b6116ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116b781611b1d565b50565b60006116fc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c63565b905092915050565b6000808314156117175760009050611784565b600082840290508284828161172857fe5b041461177f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121676021913960400191505060405180910390fd5b809150505b92915050565b60006117cc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611d23565b905092915050565b600080828401905083811015611852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611871816001546116ba90919063ffffffff16565b6001819055506118c981600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ba90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611957338260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119629092919063ffffffff16565b50565b600033905090565b6119ff8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611de9565b505050565b6000818310611a135781611a15565b825b905092915050565b611a32816001546117d490919063ffffffff16565b600181905550611a8a81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b1a33308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612034909392919063ffffffff16565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ba3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806121416026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000838311158290611d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cd5578082015181840152602081019050611cba565b50505050905090810190601f168015611d025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290611dcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d94578082015181840152602081019050611d79565b50505050905090810190601f168015611dc15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611ddb57fe5b049050809150509392505050565b611e088273ffffffffffffffffffffffffffffffffffffffff166120f5565b611e7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310611ec95780518252602082019150602081019050602083039250611ea6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f2b576040519150601f19603f3d011682016040523d82523d6000602084013e611f30565b606091505b509150915081611fa8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561202e57808060200190516020811015611fc757600080fd5b810190808051906020019092919050505061202d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806121a9602a913960400191505060405180910390fd5b5b50505050565b6120ef846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611de9565b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156121375750808214155b9250505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742072657761726420646973747269627574696f6e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c1be6c4889e687af8bc27c7b20b4f804add6a8ff1bd00857bb85ef13cb45951564736f6c634300060c0033000000000000000000000000bfdb68fde47566caa49bfdc18f20c61eceb11005000000000000000000000000d8c59bbc68b982fab30435d8379c48afe1bd067f")
	_, poolContractAddress, _, createErr := mockCreate(poolCodeBytes, config)
	fmt.Printf("Create pool contract address:%v,createErr:%v\n", poolContractAddress.GetHexString(), createErr)

	//mixTokenContract.transfer(pool.address, 1000);
	input = common.Hex2Bytes("a9059cbb0000000000000000000000007303204139749c46f8256c13ddae1e1a8a47c2a200000000000000000000000000000000000000000000000000000000000003e8")
	callResult, callLeftGas, callErr = mockCall(mixContract, input, config)
	fmt.Printf("mix transfer 1000 to pool result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//pool.startNewReward(864000, 1000); // 10 days, 1000 token
	input = common.Hex2Bytes("7a442b3b00000000000000000000000000000000000000000000000000000000000d2f0000000000000000000000000000000000000000000000000000000000003333e8")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("pool start new reward result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//账户给 LpToken 打钱
	config.Value = big.NewInt(500)
	input = common.Hex2Bytes("")
	callResult, callLeftGas, callErr = mockCall(lpContract, input, config)
	fmt.Printf("transfer to lpContract  result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
	config.Value = nil

	//lpToken.balanceOf() 余额 500
	input = common.Hex2Bytes("70a0823100000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(lpContract, input, config)
	fmt.Printf("balance result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//b := config.State.GetCode(poolContract)
	//fmt.Printf("pool contract:%s\n", common.Bytes2Hex(b))

	//lpToken.approve(Pool, "100000000000000000000000000000000")
	input = common.Hex2Bytes("095ea7b30000000000000000000000007303204139749c46f8256c13ddae1e1a8a47c2a20000000000000000000000000000000000000000000000000000000000002710")
	callResult, callLeftGas, callErr = mockCall(lpContract, input, config)
	fmt.Printf("lpToken approve  result:%v,costGas:%d,callErr:%v\n", string(callResult), config.GasLimit-callLeftGas, callErr)

	//pool.stake(100) stake
	input = common.Hex2Bytes("a694fc3a0000000000000000000000000000000000000000000000000000000000000064")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("stake 100 result:%v,costGas:%d,callErr:%v\n", string(callResult), config.GasLimit-callLeftGas, callErr)

	//lpToken.balanceOf() 余额 400
	input = common.Hex2Bytes("70a0823100000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(lpContract, input, config)
	fmt.Printf("lp balance result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//pool.balanceOf()  质押量 100
	input = common.Hex2Bytes("70a0823100000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("stake balance result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//pool.earned(0x50f4a728b5e5ddc053e4386e8ce7bce3171fd3e7)
	config.Time = new(big.Int).SetUint64(uint64(time.Now().Unix()))
	input = common.Hex2Bytes("008cc26200000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("earned result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	for i := 0; i < 4; i++ {
		time.Sleep(time.Second * 30)
		config.Time = new(big.Int).SetUint64(uint64(time.Now().Unix()))
		callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
		fmt.Printf("earned result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
	}

	//pool.getReward(0x50f4a728b5e5ddc053e4386e8ce7bce3171fd3e7)       harvest
	input = common.Hex2Bytes("3d18b91200000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("get reward result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//pool.earned(0x50f4a728b5e5ddc053e4386e8ce7bce3171fd3e7)
	config.Time = new(big.Int).SetUint64(uint64(time.Now().Unix()))
	input = common.Hex2Bytes("008cc26200000000000000000000000050f4a728b5e5ddc053e4386e8ce7bce3171fd3e7")
	callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
	fmt.Printf("earned result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	for i := 0; i < 10; i++ {
		time.Sleep(time.Second * 30)
		config.Time = new(big.Int).SetUint64(uint64(time.Now().Unix()))
		callResult, callLeftGas, callErr = mockCall(poolContract, input, config)
		fmt.Printf("earned result:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
	}

	//pool.withdraw(50)      unstake
}

func TestBase64(t *testing.T) {
	//s := "YGBgQFJgBDYQYQCuV2P/////fAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAA1BBZjBv3eA4EUYQC4V4BjCV6nsxRhAUJXgGMYFg3dFGEBeFeAYyO4ct0UYQGdV4BjLhp9TRRhAcVXgGMxPOVnFGEB21eAY3CggjEUYQIEV4BjldibQRRhAiNXgGOpBZy7FGECNleAY9DjDbAUYQCuV4Bj3WLtPhRhAlhXW2EAtmECfVZbAFs0FWEAw1dgAID9W2EAy2EC01ZbYEBRYCCAglKBkIEBg4GBUYFSYCABkVCAUZBgIAGQgIODYABbg4EQFWEBB1eAggFRg4IBUmAgAWEA71ZbUFBQUJBQkIEBkGAfFoAVYQE0V4CCA4BRYAGDYCADYQEACgMZFoFSYCABkVBbUJJQUFBgQFGAkQOQ81s0FWEBTVdgAID9W2EBZGABYKBgAgoDYAQ1FmAkNWEDcVZbYEBRkBUVgVJgIAFgQFGAkQOQ81s0FWEBg1dgAID9W2EBi2ED3VZbYEBRkIFSYCABYEBRgJEDkPNbNBVhAahXYACA/VthAWRgAWCgYAIKA2AENYEWkGAkNRZgRDVhA+tWWzQVYQHQV2AAgP1bYQC2YAQ1YQUxVls0FWEB5ldgAID9W2EB7mEF31ZbYEBRYP+QkRaBUmAgAWBAUYCRA5DzWzQVYQIPV2AAgP1bYQGLYAFgoGACCgNgBDUWYQXoVls0FWECLldgAID9W2EAy2EF+lZbNBVhAkFXYACA/VthAWRgAWCgYAIKA2AENRZgJDVhBmVWWzQVYQJjV2AAgP1bYQGLYAFgoGACCgNgBDWBFpBgJDUWYQZ5VltgAWCgYAIKAzMWYACBgVJgA2AgUmBAkIGQIIBUNJCBAZCRVX/h//zEkj0EtVn00pqL/GzaBOtbDTxGB1HCQCxcXMkQnJFRkIFSYCABYEBRgJEDkKJWW2AAgFRgAYFgARYVYQEAAgMWYAKQBIBgHwFgIICRBAJgIAFgQFGQgQFgQFKAkpGQgYFSYCABgoBUYAGBYAEWFWEBAAIDFmACkASAFWEDaVeAYB8QYQM+V2EBAICDVAQCg1KRYCABkWEDaVZbggGRkGAAUmAgYAAgkFuBVIFSkGABAZBgIAGAgxFhA0xXgpADYB8WggGRW1BQUFBQgVZbYAFgoGACCgMzgRZgAIGBUmAEYCCQgVJgQICDIJSHFoCEUpSQkVKAgiCFkFWQkpGQf4xb4eXr7H1b0U9xQn0ehPPdAxTA97IpHlsgCsjHw7klkIWQUZCBUmAgAWBAUYCRA5CjUGABkpFQUFZbYAFgoGACCgMwFjGQVltgAWCgYAIKA4MWYACQgVJgA2AgUmBAgSBUgpAQFWEEEVdgAID9WzNgAWCgYAIKAxaEYAFgoGACCgMWFBWAFWEEW1dQYAFgoGACCgOAhRZgAJCBUmAEYCCQgVJgQICDIDOQlBaDUpKQUiBUYAAZFBVbFWEEwldgAWCgYAIKA4CFFmAAkIFSYARgIJCBUmBAgIMgM5CUFoNSkpBSIFSCkBAVYQSUV2AAgP1bYAFgoGACCgOAhRZgAJCBUmAEYCCQgVJgQICDIDOQlBaDUpKQUiCAVIOQA5BVW2ABYKBgAgoDgIUWYACBgVJgA2AgUmBAgIIggFSHkAOQVZKGFoCCUpCDkCCAVIYBkFWRf93yUq0b4sibacKwaPw3jaqVK6fxY8ShFij1Wk31I7PvkIWQUZCBUmAgAWBAUYCRA5CjUGABk5JQUFBWW2ABYKBgAgoDMxZgAJCBUmADYCBSYECQIFSBkBAVYQVXV2AAgP1bYAFgoGACCgMzFmAAgYFSYANgIFJgQJCBkCCAVISQA5BVghVhCPwCkIOQUWAAYEBRgIMDgYWIiPGTUFBQUBUVYQWfV2AAgP1bM2ABYKBgAgoDFn9/z1MsFfCm2wvW0OA4vqcdMNgIx9mMs79yaKlb9QgbZYJgQFGQgVJgIAFgQFGAkQOQolBWW2ACVGD/FoFWW2ADYCBSYACQgVJgQJAgVIFWW2ABgFRgAYFgARYVYQEAAgMWYAKQBIBgHwFgIICRBAJgIAFgQFGQgQFgQFKAkpGQgYFSYCABgoBUYAGBYAEWFWEBAAIDFmACkASAFWEDaVeAYB8QYQM+V2EBAICDVAQCg1KRYCABkWEDaVZbYABhBnIzhIRhA+tWW5OSUFBQVltgBGAgkIFSYACSg1JgQICEIJCRUpCCUpAgVIFWAKFlYnp6cjBYIGGg+Han5qM0PXP/FmEH0DoeoaY0iw8fIx4FFLRks15FACk="
	//s := ""
	//s := ""
	s := "AAAAAAAAAAAAAAAAAAAAAAAAAAAACEVfARPnjc+cSAM="
	b, _ := base64.StdEncoding.DecodeString(s)
	fmt.Printf("%v\n", common.Bytes2Hex(b))
	fmt.Printf("%v\n", b)

	a := big.NewInt(0)
	a.SetBytes(b)
	fmt.Printf("%v\n", a.String())
}
