package vm

import (
	"com.tuntun.rocket/node/src/common"
	"com.tuntun.rocket/node/src/middleware/log"
	"com.tuntun.rocket/node/src/vm/crypto"
	"fmt"
	"github.com/holiman/uint256"
	"math/big"
	"testing"
)

func TestVM0(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(0)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b5060ca806100236000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632beaa90f14603757806387db03b7146053575b600080fd5b603d607e565b6040518082815260200191505060405180910390f35b607c60048036036020811015606757600080fd5b81019080803590602001909291905050506087565b005b60008054905090565b80600054016000819055505056fea265627a7a72315820dd06e5c6466fd6226b1d4db2bfa83033ef4a09278a8cd2f8efde275770f29e8a64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v\n", createResult)
	fmt.Printf("New create contract createLeftGas:%v,createErr:%v\n", createLeftGas, createErr)

	//invoke add
	input := common.Hex2Bytes("87db03b70000000000000000000000000000000000000000000000000000000000000003")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,callLeftGas:%v,callErr:%v\n", callResult, callLeftGas, callErr)

	//invoke get
	input = common.Hex2Bytes("2beaa90f")
	callResult, callLeftGas, callErr = mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,callLeftGas:%v,callErr:%v\n", callResult, callLeftGas, callErr)
	//stateDB := config.State
}

func TestVM1(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610283806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d56562c1461005c5780632beaa90f146100a05780635b3357d2146100be5780636271f50e146100dc578063d4b6f21c14610128575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610146565b005b6100a861018a565b6040518082815260200191505060405180910390f35b6100c6610193565b6040518082815260200191505060405180910390f35b610126600480360360808110156100f257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506101d4565b005b61013061020d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b836000540160008190555082600054036000819055508160005402600081905550806000548161020057fe5b0560008190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820d99c4e269ce7a3842ef1d4ed91588b73c5883a822de11215136baf18c0761dcc64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("6271f50e000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000002")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM2(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610283806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d56562c1461005c5780632beaa90f146100a05780635b3357d2146100be5780636271f50e146100dc578063d4b6f21c14610128575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610146565b005b6100a861018a565b6040518082815260200191505060405180910390f35b6100c6610193565b6040518082815260200191505060405180910390f35b610126600480360360808110156100f257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506101d4565b005b61013061020d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b836000540160008190555082600054036000819055508160005402600081905550806000548161020057fe5b0560008190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820d99c4e269ce7a3842ef1d4ed91588b73c5883a822de11215136baf18c0761dcc64736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("0d56562c000000000000000000000000f89eebcc07e820f5a8330f52111fa51dd9dfb925")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	stateDB := config.State
	addr := common.HexToAddress("0xf89eebcc07e820f5a8330f52111fa51dd9dfb925")
	stateDB.SetBalance(addr, big.NewInt(5))

	input2 := common.Hex2Bytes("5b3357d2")
	callResult2, callLeftGas2, callErr2 := mockCall(contractAddress, input2, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult2, config.GasLimit-callLeftGas2, callErr2)

	input3 := common.Hex2Bytes("d4b6f21c")
	callResult3, callLeftGas3, callErr3 := mockCall(contractAddress, input3, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult3, config.GasLimit-callLeftGas3, callErr3)

}

func TestVM3(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("60806040526000805534801561001457600080fd5b50610393806100246000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d56562c146100675780632beaa90f146100ab5780635b3357d2146100c95780636271f50e146100e7578063c667a2f314610133578063d4b6f21c146101fc575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021a565b005b6100b361025e565b6040518082815260200191505060405180910390f35b6100d1610267565b6040518082815260200191505060405180910390f35b610131600480360360808110156100fd57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102a8565b005b6101e260048036036101c081101561014a57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291905050506102e1565b604051808215151515815260200191505060405180910390f35b61020461031d565b6040518082815260200191505060405180910390f35b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b83600054016000819055508260005403600081905550816000540260008190555080600054816102d457fe5b0560008190555050505050565b60008b9c50899a508798508596508394508192508d8f1115610306576001905061030b565b600090505b9e9d5050505050505050505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163190509056fea265627a7a72315820c86eab4397d623e08f37b570d296bd75678ba8161e97d34122d738bb0e76dd3464736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("c667a2f3000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000d000000000000000000000000000000000000000000000000000000000000000e")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM4(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052735c602ec7b8de713d6106da7d1db1fd7bfcc2d4d46000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006557600080fd5b5060405162001c9938038062001c9983398181016040526200008b9190810190620000f2565b600060028190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200016c565b600081519050620000ec8162000152565b92915050565b6000602082840312156200010557600080fd5b60006200011584828501620000db565b91505092915050565b60006200012b8262000132565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200015d816200011e565b81146200016957600080fd5b50565b611b1d806200017c6000396000f3fe6080604052600436106100555760003560e01c8063046b290814610057578063999635a11461006e578063ad88be6e14610097578063b2b57a26146100c0578063da68b4b4146100e9578063eb185c50146100f3575b005b34801561006357600080fd5b5061006c61010f565b005b34801561007a57600080fd5b5061009560048036036100909190810190611327565b61014a565b005b3480156100a357600080fd5b506100be60048036036100b9919081019061123e565b610369565b005b3480156100cc57600080fd5b506100e760048036036100e29190810190611327565b61055c565b005b6100f161074e565b005b61010d600480360361010891908101906111fd565b610796565b005b7f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516101409190611754565b60405180910390a1565b846001600254011461015b57600080fd5b600084511161016957600080fd5b835183511461017757600080fd5b835182511461018557600080fd5b606060008090505b85518110156101c85760606101b5838884815181106101a857fe5b60200260200101516107e1565b905080925050808060010191505061018d565b506060868286866040516020016101e2949392919061160d565b6040516020818303038152906040529050600081805190602001209050610209818561092a565b61021557505050610362565b60008090505b87518110156103125786818151811061023057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc87838151811061025d57fe5b60200260200101519081150290604051600060405180830381858888f19350505050158015610290573d6000803e3d6000fd5b507fe04d47d3054af1f047151ee17798cebe92f604635034315e4fcab7b2d7a66ef98882815181106102be57fe5b60200260200101518883815181106102d257fe5b60200260200101518884815181106102e657fe5b60200260200101516040516102fd93929190611716565b60405180910390a1808060010191505061021b565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516103569190611754565b60405180910390a15050505b5050505050565b856001600254011461037a57600080fd5b600084511161038857600080fd5b835183511461039657600080fd5b83518251146103a457600080fd5b606060008090505b85518110156103e75760606103d4838884815181106103c757fe5b60200260200101516107e1565b90508092505080806001019150506103ac565b50606087828686604051602001610401949392919061160d565b6040516020818303038152906040529050600081805190602001209050610428818561092a565b61043457505050610554565b60008090505b8751811015610504578873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88838151811061046b57fe5b602002602001015188848151811061047f57fe5b60200260200101516040518363ffffffff1660e01b81526004016104a492919061166a565b602060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104f691908101906111d4565b50808060010191505061043a565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c06002546040516105489190611754565b60405180910390a15050505b505050505050565b846001600254011461056d57600080fd5b600084511161057b57600080fd5b835183511461058957600080fd5b835182511461059757600080fd5b606060008090505b85518110156105da5760606105c7838884815181106105ba57fe5b60200260200101516107e1565b905080925050808060010191505061059f565b506060868286866040516020016105f4949392919061160d565b604051602081830303815290604052905060008180519060200120905061061b818561092a565b61062757505050610747565b60008090505b87518110156106f7576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88838151811061067f57fe5b602002602001015188848151811061069357fe5b60200260200101516040518363ffffffff1660e01b81526004016106b892919061166a565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050808060010191505061062d565b506002600081548092919060010191905055507f8a75e65e6a8c5a0bc5c906bb7fc1f38cdbdfc0adc92e41b43b3ce83463a8a8c060025460405161073b9190611754565b60405180910390a15050505b5050505050565b6000341161075b57600080fd5b7fb61b60bb8d6b946262c1546b50b6e216393eb147c9d267ea7d123d9aafd5483a333460405161078c92919061166a565b60405180910390a1565b600034116107a357600080fd5b7f6cf43ed1a9dd396df89c54be8a0dacaf939f1afdc5dc17a37974d01665ad2d478133346040516107d6939291906116d8565b60405180910390a150565b6060808390506060839050606081518351016040519080825280601f01601f1916602001820160405280156108255781602001600182028038833980820191505090505b5090506060819050600080905060008090505b85518110156108a65785818151811061084d57fe5b602001015160f81c60f81b83838060010194508151811061086a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610838565b5060008090505b845181101561091b578481815181106108c257fe5b602001015160f81c60f81b8383806001019450815181106108df57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506108ad565b50829550505050505092915050565b6000610934610da0565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309a9d76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109d491908101906111ab565b90507fe821288434e942492293d0b381bb8e705c32fa88ff6a7978ea1a399fde4a7e6d81600060038110610a0457fe5b6020020151604051610a16919061164f565b60405180910390a16000809050610a2b610dc2565b60008090505b8551811015610b45576000610a5988888481518110610a4c57fe5b6020026020010151610b68565b9050600080905060008090505b83811015610ac8578273ffffffffffffffffffffffffffffffffffffffff16858260048110610a9157fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415610abb5760019150610ac8565b8080600101915050610a66565b506001811415610ad9575050610b38565b81848460048110610ae657fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610b278683610bd9565b15610b355784806001019550505b50505b8080600101915050610a31565b5060028210610b5a5760019350505050610b62565b600093505050505b92915050565b600080610b80610b7b8460006020610c51565b610d05565b90506000610b98610b9385602080610c51565b610d05565b90506000610ba98560406001610c51565b600081518110610bb557fe5b602001015160f81c60f81b9050610bce86848484610d13565b935050505092915050565b600080600090505b6004811015610c45578273ffffffffffffffffffffffffffffffffffffffff16848260038110610c0d57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415610c38576001915050610c4b565b8080600101915050610be1565b50600090505b92915050565b606080826040519080825280601f01601f191660200182016040528015610c875781602001600182028038833980820191505090505b50905060008090505b83811015610cf9578585820181518110610ca657fe5b602001015160f81c60f81b828281518110610cbd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610c90565b50809150509392505050565b600060208201519050919050565b6000808260f81c905060008360f81c60ff161480610d37575060018360f81c60ff16145b15610d4657601b8360f81c0190505b60018682878760405160008152602001604052604051610d699493929190611693565b6020604051602081039080840390855afa158015610d8b573d6000803e3d6000fd5b50505060206040510351915050949350505050565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b600081359050610df381611a7e565b92915050565b600081519050610e0881611a7e565b92915050565b600081359050610e1d81611a95565b92915050565b600082601f830112610e3457600080fd5b6003610e47610e428261179c565b61176f565b91508183856020840282011115610e5d57600080fd5b60005b83811015610e8d5781610e738882610df9565b845260208401935060208301925050600181019050610e60565b5050505092915050565b600082601f830112610ea857600080fd5b8135610ebb610eb6826117be565b61176f565b91508181835260208401935060208101905083856020840282011115610ee057600080fd5b60005b83811015610f105781610ef68882610e0e565b845260208401935060208301925050600181019050610ee3565b5050505092915050565b600082601f830112610f2b57600080fd5b8135610f3e610f39826117e6565b61176f565b9150818183526020840193506020810190508360005b83811015610f845781358601610f6a888261109a565b845260208401935060208301925050600181019050610f54565b5050505092915050565b600082601f830112610f9f57600080fd5b8135610fb2610fad8261180e565b61176f565b9150818183526020840193506020810190508360005b83811015610ff85781358601610fde88826110ee565b845260208401935060208301925050600181019050610fc8565b5050505092915050565b600082601f83011261101357600080fd5b813561102661102182611836565b61176f565b9150818183526020840193506020810190508385602084028201111561104b57600080fd5b60005b8381101561107b57816110618882611196565b84526020840193506020830192505060018101905061104e565b5050505092915050565b60008151905061109481611aac565b92915050565b600082601f8301126110ab57600080fd5b81356110be6110b98261185e565b61176f565b915080825260208301602083018583830111156110da57600080fd5b6110e5838284611a21565b50505092915050565b600082601f8301126110ff57600080fd5b813561111261110d8261188a565b61176f565b9150808252602083016020830185838301111561112e57600080fd5b611139838284611a21565b50505092915050565b600082601f83011261115357600080fd5b8135611166611161826118b6565b61176f565b9150808252602083016020830185838301111561118257600080fd5b61118d838284611a21565b50505092915050565b6000813590506111a581611ac3565b92915050565b6000606082840312156111bd57600080fd5b60006111cb84828501610e23565b91505092915050565b6000602082840312156111e657600080fd5b60006111f484828501611085565b91505092915050565b60006020828403121561120f57600080fd5b600082013567ffffffffffffffff81111561122957600080fd5b61123584828501611142565b91505092915050565b60008060008060008060c0878903121561125757600080fd5b600061126589828a01611196565b965050602061127689828a01610de4565b955050604087013567ffffffffffffffff81111561129357600080fd5b61129f89828a01610f8e565b945050606087013567ffffffffffffffff8111156112bc57600080fd5b6112c889828a01610e97565b935050608087013567ffffffffffffffff8111156112e557600080fd5b6112f189828a01611002565b92505060a087013567ffffffffffffffff81111561130e57600080fd5b61131a89828a01610f1a565b9150509295509295509295565b600080600080600060a0868803121561133f57600080fd5b600061134d88828901611196565b955050602086013567ffffffffffffffff81111561136a57600080fd5b61137688828901610f8e565b945050604086013567ffffffffffffffff81111561139357600080fd5b61139f88828901610e97565b935050606086013567ffffffffffffffff8111156113bc57600080fd5b6113c888828901611002565b925050608086013567ffffffffffffffff8111156113e557600080fd5b6113f188828901610f1a565b9150509295509295909350565b600061140a838361143d565b60208301905092915050565b600061142283836115d8565b60208301905092915050565b611437816119eb565b82525050565b6114468161198c565b82525050565b6114558161197a565b82525050565b600061146682611902565b6114708185611948565b935061147b836118e2565b8060005b838110156114ac57815161149388826113fe565b975061149e8361192e565b92505060018101905061147f565b5085935050505092915050565b60006114c48261190d565b6114ce8185611953565b93506114d9836118f2565b8060005b8381101561150a5781516114f18882611416565b97506114fc8361193b565b9250506001810190506114dd565b5085935050505092915050565b611520816119aa565b82525050565b600061153182611923565b61153b818561195e565b935061154b818560208601611a30565b61155481611a6d565b840191505092915050565b600061156a82611923565b611574818561196f565b9350611584818560208601611a30565b80840191505092915050565b600061159b82611918565b6115a5818561195e565b93506115b5818560208601611a30565b6115be81611a6d565b840191505092915050565b6115d2816119d4565b82525050565b6115e1816119d4565b82525050565b6115f86115f3826119d4565b611a63565b82525050565b611607816119de565b82525050565b600061161982876115e7565b602082019150611629828661155f565b9150611635828561145b565b915061164182846114b9565b915081905095945050505050565b6000602082019050611664600083018461144c565b92915050565b600060408201905061167f600083018561142e565b61168c60208301846115c9565b9392505050565b60006080820190506116a86000830187611517565b6116b560208301866115fe565b6116c26040830185611517565b6116cf6060830184611517565b95945050505050565b600060608201905081810360008301526116f28186611526565b9050611701602083018561142e565b61170e60408301846115c9565b949350505050565b600060608201905081810360008301526117308186611590565b905061173f602083018561142e565b61174c60408301846115c9565b949350505050565b600060208201905061176960008301846115c9565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561179257600080fd5b8060405250919050565b600067ffffffffffffffff8211156117b357600080fd5b602082029050919050565b600067ffffffffffffffff8211156117d557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156117fd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561182557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561184d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561187557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156118a157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156118cd57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611985826119b4565b9050919050565b6000611997826119b4565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006119f6826119fd565b9050919050565b6000611a0882611a0f565b9050919050565b6000611a1a826119b4565b9050919050565b82818337600083830152505050565b60005b83811015611a4e578082015181840152602081019050611a33565b83811115611a5d576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b611a878161197a565b8114611a9257600080fd5b50565b611a9e8161198c565b8114611aa957600080fd5b50565b611ab58161199e565b8114611ac057600080fd5b50565b611acc816119d4565b8114611ad757600080fd5b5056fea365627a7a723158207a4a6d7944acd950c4876c6760d5b0fe976a7e962ad8d98f66f589a2afa5eb806c6578706572696d656e74616cf564736f6c63430005110040000000000000000000000000253D2C464d6c0bF52e7ea5E798B87912d99303bd")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)
	//-------------------CALL 1----------------
	input := common.Hex2Bytes("da68b4b4")

	stateDB := config.State
	addr := common.HexToAddress("0x0f656deb14f9666d3fdf9dff7c1c430c0570223f10900c89c94a79324ad24085")
	stateDB.SetBalance(addr, big.NewInt(5))

	config.Value = big.NewInt(1)
	config.Origin = addr
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
	//-------CALL 2 ---------------------
	input2 := common.Hex2Bytes("eb185c50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000056162636465000000000000000000000000000000000000000000000000000000")

	addr = common.HexToAddress("0x0f656deb14f9666d3fdf9dff7c1c430c0570223f10900c89c94a79324ad24084")
	stateDB.SetBalance(addr, big.NewInt(5))

	config.Value = big.NewInt(2)
	config.Origin = addr
	callResult2, callLeftGas2, callErr2 := mockCall(contractAddress, input2, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult2, config.GasLimit-callLeftGas2, callErr2)
}

func TestVM5(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("608060405234801561001057600080fd5b50610223806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639db8d7d514610030575b600080fd5b61005c6004803603602081101561004657600080fd5b810190808035906020019092919050505061005e565b005b60606040518060200161007090610106565b6020820181038252601f19601f820116604052509050600081518381602085016000f59150507fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e18184604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505050565b60e5806101138339019056fe6080604052736a47c06bcfabc079e4c3b196a47f3b5a2fa998b96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ead5853f4d54d0718c568a589f0087c5eb385645600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060025534801560bd57600080fd5b50600160025401600281905550600073ffffffffffffffffffffffffffffffffffffffff16fffea165627a7a72305820819896a9eac1488592d8328ef846692c4cb6c760d247250e56013d5ca20d6e760029")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("9db8d7d50000000000000000000000000000000000000000000000000000000000000001")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestCreate2Address(t *testing.T) {
	salt := uint256.NewInt()
	salt.SetUint64(1)

	addr := common.HexToAddress("0x616fe1518d70c3d3a4d10c89005f29db05979b31000000000000000000000000")

	code := common.Hex2Bytes("6080604052736a47c06bcfabc079e4c3b196a47f3b5a2fa998b96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ead5853f4d54d0718c568a589f0087c5eb385645600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060025534801560bd57600080fd5b50600160025401600281905550600073ffffffffffffffffffffffffffffffffffffffff16fffe")
	codeAndHash := &codeAndHash{code: code}

	fmt.Printf("code:%v\n", codeAndHash.Hash().Bytes())
	fmt.Printf("addr:%v\n", addr.Bytes())
	fmt.Printf("salt:%v\n", salt.Bytes32())
	contractAddr := crypto.CreateAddress2(addr, common.Hash(salt.Bytes32()), codeAndHash.Hash().Bytes())
	fmt.Printf("create2 contract addr:%v", contractAddr.Bytes())
}

func TestVM6(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	contractCodeBytes := common.Hex2Bytes("6080604052348015600f57600080fd5b506103ac8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b610038610052565b604051808215151515815260200191505060405180910390f35b600080600360050690507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a16000600460050790507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a1600081831390507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160008060011890507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160003090507fe821288434e942492293d0b381bb8e705c32fa88ff6a7978ea1a399fde4a7e6d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160003290507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160003a90507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a16000600140905060004190507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004390507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004290507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004490507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160004590507f3a406d3871dab9676f7dbfa824f81f599698603527e1521006603c9118171e18816040518082815260200191505060405180910390a160019d50505050505050505050505050509056fea265627a7a723158208f072ad16ca9bcf60e7483559e58f66b1dd625c0eb10201e3846e1c9dbdd62e064736f6c63430005110032")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	input := common.Hex2Bytes("f8a8fd6d")
	callResult, callLeftGas, callErr := mockCall(contractAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}

func TestVM7(t *testing.T) {
	mockInit()
	config := new(testConfig)
	setDefaults(config)
	defer log.Close()

	config.Origin = common.HexToAddress("0x407988d14785a6ae45e3106b4f9799c0ab0af3d0c85447ce1ddb09f089872257")
	config.GasLimit = 3000000
	config.GasPrice = big.NewInt(1)

	//部署KittyCoreTest合约 发送交易的账户是COO
	contractCodeBytes := common.Hex2Bytes("60606040526000600260146101000a81548160ff0219169083151502179055506101c060405190810160405280603c63ffffffff1663ffffffff168152602001607863ffffffff1663ffffffff16815260200161012c63ffffffff1663ffffffff16815260200161025863ffffffff1663ffffffff16815260200161070863ffffffff1663ffffffff168152602001610e1063ffffffff1663ffffffff168152602001611c2063ffffffff1663ffffffff16815260200161384063ffffffff1663ffffffff16815260200161708063ffffffff1663ffffffff16815260200161e10063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016202a30063ffffffff1663ffffffff1681526020016205460063ffffffff1663ffffffff16815260200162093a8063ffffffff1663ffffffff16815250600390600e62000156929190620007d4565b506040805190810160405280600d81526020017f43727970746f4b69747469657300000000000000000000000000000000000000815250600a9080519060200190620001a49291906200087e565b506040805190810160405280600281526020017f434b000000000000000000000000000000000000000000000000000000000000815250600b9080519060200190620001f29291906200087e565b5066038d7ea4c68000600c5561138860105561c350601155662386f26fc100006012556201518060135534156200022857600080fd5b6001600260146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200030a60008060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006200031164010000000002620040bf176401000000009004565b5062000adb565b60006200031d62000905565b600063ffffffff88111515156200033357600080fd5b63ffffffff87111515156200034757600080fd5b61ffff86111515156200035957600080fd5b610100604051908101604052808681526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018963ffffffff1681526020018863ffffffff168152602001600063ffffffff168152602001600061ffff1681526020018761ffff168152509150600160058054806001018281620003df919062000979565b916000526020600020906002020160008590919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff160217905550505003905063ffffffff81111515156200053157600080fd5b8373ffffffffffffffffffffffffffffffffffffffff167f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad582846060015163ffffffff16856080015163ffffffff1686600001516040518085815260200184815260200183815260200182815260200194505050505060405180910390a2620005d160008583620005df6401000000000262003a4e176401000000009004565b809250505095945050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156200077457600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556008600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b82600e6007016008900481019282156200086b5791602002820160005b838211156200083757835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302620007f1565b8015620008695782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000837565b505b5090506200087a9190620009ae565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620008c157805160ff1916838001178555620008f2565b82800160010185558215620008f2579182015b82811115620008f1578251825591602001919060010190620008d4565b5b509050620009019190620009e4565b5090565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b815481835581811511620009a957600202816002028360005260206000209182019101620009a8919062000a0c565b5b505050565b620009e191905b80821115620009dd57600081816101000a81549063ffffffff021916905550600101620009b5565b5090565b90565b62000a0991905b8082111562000a05576000816000905550600101620009eb565b5090565b90565b62000ad891905b8082111562000ad4576000808201600090556001820160006101000a81549067ffffffffffffffff02191690556001820160086101000a81549067ffffffffffffffff02191690556001820160106101000a81549063ffffffff02191690556001820160146101000a81549063ffffffff02191690556001820160186101000a81549063ffffffff021916905560018201601c6101000a81549061ffff021916905560018201601e6101000a81549061ffff02191690555060020162000a13565b5090565b90565b6149158062000aeb6000396000f3006060604052600436106102a9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063030c47411461035f5780630519ce79146103a157806305e45546146103f657806306fdde031461041f578063095ea7b3146104ad5780630a0f8168146104ef5780631051db341461054457806314001f4c1461057157806318160ddd146105aa57806321717ebf146105d357806323b872dd1461062857806324e7a38a1461068957806327d7874c146106c25780632ba73c15146106fb5780633d7d3f5a146107345780633f4ba83a14610772578063404d0e3e1461078757806346116e6f146107b057806346d22c70146108135780634707f44f14610857578063481af3d3146108ad5780634ad8c938146109105780634b85fd551461094e5780634dfff04f146109715780634e0a3379146109b357806356129134146109ec5780635c975abb14610a2e5780635fd8c71014610a5b5780636352211e14610a705780636af04a5714610ad35780636fbde40d14610b285780637004fb8414610b6157806370a0823114610b8d5780637158798814610bda5780638456cb5914610c1357806388c2a0bf14610c2857806391876e5714610c5f57806395d89b4114610c745780639d6fac6f14610d02578063a45f4bfc14610d45578063a9059cbb14610da8578063ae4d0ff714610dea578063b047fb5014610e13578063b0c35c0514610e68578063b531933514610e91578063b6a324e014610eba578063c3bea9af14610edc578063c8241ba614610eff578063d3e6f49f14610f31578063d95660be14610f6c578063e6cbe35114610f95578063e98b7f4d14610fea578063eb845c1714611068578063ed60ade614611091578063f1ca9410146110b2578063f2b47d52146110db578063f7d8c88314611130575b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103525750600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561035d57600080fd5b005b341561036a57600080fd5b61039f600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611151565b005b34156103ac57600080fd5b6103b46111ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040157600080fd5b610409611213565b6040518082815260200191505060405180910390f35b341561042a57600080fd5b610432611219565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610472578082015181840152602081019050610457565b50505050905090810190601f16801561049f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104b857600080fd5b6104ed600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506112b7565b005b34156104fa57600080fd5b610502611351565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561054f57600080fd5b610557611376565b604051808215151515815260200191505060405180910390f35b341561057c57600080fd5b6105a8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061137f565b005b34156105b557600080fd5b6105bd6114b6565b6040518082815260200191505060405180910390f35b34156105de57600080fd5b6105e66114c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561063357600080fd5b610687600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114ec565b005b341561069457600080fd5b6106c0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611542565b005b34156106cd57600080fd5b6106f9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611679565b005b341561070657600080fd5b610732600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611753565b005b341561073f57600080fd5b610770600480803590602001909190803590602001909190803590602001909190803590602001909190505061182e565b005b341561077d57600080fd5b610785611981565b005b341561079257600080fd5b61079a611b78565b6040518082815260200191505060405180910390f35b34156107bb57600080fd5b6107d16004808035906020019091905050611b7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561081e57600080fd5b61083d6004808035906020019091908035906020019091905050611bb1565b604051808215151515815260200191505060405180910390f35b341561086257600080fd5b610897600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611c39565b6040518082815260200191505060405180910390f35b34156108b857600080fd5b6108ce6004808035906020019091905050611cf0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561091b57600080fd5b61094c6004808035906020019091908035906020019091908035906020019091908035906020019091905050611d23565b005b341561095957600080fd5b61096f6004808035906020019091905050611e8a565b005b341561097c57600080fd5b6109b1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611ef0565b005b34156109be57600080fd5b6109ea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611f77565b005b34156109f757600080fd5b610a2c600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612052565b005b3415610a3957600080fd5b610a41612165565b604051808215151515815260200191505060405180910390f35b3415610a6657600080fd5b610a6e612178565b005b3415610a7b57600080fd5b610a91600480803590602001909190505061224f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ade57600080fd5b610ae66122c8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610b3357600080fd5b610b5f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506122ee565b005b3415610b6c57600080fd5b610b8b6004808035906020019091908035906020019091905050612425565b005b3415610b9857600080fd5b610bc4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612755565b6040518082815260200191505060405180910390f35b3415610be557600080fd5b610c11600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061279e565b005b3415610c1e57600080fd5b610c266128bb565b005b3415610c3357600080fd5b610c4960048080359060200190919050506129ff565b6040518082815260200191505060405180910390f35b3415610c6a57600080fd5b610c72612da6565b005b3415610c7f57600080fd5b610c87612f36565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cc7578082015181840152602081019050610cac565b50505050905090810190601f168015610cf45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610d0d57600080fd5b610d236004808035906020019091905050612fd4565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3415610d5057600080fd5b610d666004808035906020019091905050613003565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610db357600080fd5b610de8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613036565b005b3415610df557600080fd5b610dfd6130b2565b6040518082815260200191505060405180910390f35b3415610e1e57600080fd5b610e266130b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610e7357600080fd5b610e7b6130de565b6040518082815260200191505060405180910390f35b3415610e9c57600080fd5b610ea46130e4565b6040518082815260200191505060405180910390f35b610ec26130ea565b604051808215151515815260200191505060405180910390f35b3415610ee757600080fd5b610efd60048080359060200190919050506130f3565b005b3415610f0a57600080fd5b610f2f600480803590602001909190803563ffffffff169060200190919050506132b0565b005b3415610f3c57600080fd5b610f526004808035906020019091905050613374565b604051808215151515815260200191505060405180910390f35b3415610f7757600080fd5b610f7f6134e3565b6040518082815260200191505060405180910390f35b3415610fa057600080fd5b610fa86134eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ff557600080fd5b61100b6004808035906020019091905050613511565b604051808b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390f35b341561107357600080fd5b61107b613672565b6040518082815260200191505060405180910390f35b6110b06004808035906020019091908035906020019091905050613678565b005b34156110bd57600080fd5b6110c56138f8565b6040518082815260200191505060405180910390f35b34156110e657600080fd5b6110ee6138fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61114f6004808035906020019091908035906020019091905050613924565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111ad57600080fd5b600260149054906101000a900460ff161515156111c957600080fd5b6111d330836139e2565b15156111de57600080fd5b6111e9308284613a4e565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60145481565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112af5780601f10611284576101008083540402835291602001916112af565b820191906000526020600020905b81548152906001019060200180831161129257829003601f168201915b505050505081565b600260149054906101000a900460ff161515156112d357600080fd5b6112dd33826139e2565b15156112e857600080fd5b6112f28183613c42565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113dc57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166376190f8f6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561144b57600080fd5b6102c65a03f1151561145c57600080fd5b50505060405180519050151561147157600080fd5b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160058054905003905090565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561150857600080fd5b6115123382613c98565b151561151d57600080fd5b61152783826139e2565b151561153257600080fd5b61153d838383613a4e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561159f57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561160e57600080fd5b6102c65a03f1151561161f57600080fd5b50505060405180519050151561163457600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116d457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561171057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117ea57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1615151561184a57600080fd5b61185433856139e2565b151561185f57600080fd5b61188b84600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613c42565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b151561196757600080fd5b6102c65a03f1151561197857600080fd5b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119dc57600080fd5b600260149054906101000a900460ff1615156119f757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611a5557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611ab357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611b1157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611b6e57600080fd5b611b76613d04565b565b60115481565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008085111515611bc457600080fd5b600084111515611bd357600080fd5b600585815481101515611be257fe5b90600052602060002090600202019150600584815481101515611c0157fe5b90600052602060002090600202019050611c1d82868387613d97565b8015611c2f5750611c2e8486613fac565b5b9250505092915050565b6000806000809150600190505b611c4e6114b6565b81111515611ce3578473ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cd65783821415611ccd57809250611ce8565b81806001019250505b8080600101915050611c46565b600080fd5b505092915050565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff16151515611d3f57600080fd5b611d4933856139e2565b1515611d5457600080fd5b611d5d84613374565b1515611d6857600080fd5b611d9484600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613c42565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1515611e7057600080fd5b6102c65a03f11515611e8157600080fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee657600080fd5b80600c8190555050565b600260149054906101000a900460ff16151515611f0c57600080fd5b611f1633826139e2565b1515611f2157600080fd5b816009600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fd257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561200e57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561210957600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b60105460145410151561211b57600080fd5b60115460155410151561212d57600080fd5b601460008154809291906001019190505550601560008154809291906001019190505550612160600080600085856140bf565b505050565b600260149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121d457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561224d57600080fd5b565b60006006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156122c357600080fd5b919050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561234b57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166385b861886000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156123ba57600080fd5b6102c65a03f115156123cb57600080fd5b5050506040518051905015156123e057600080fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080600260149054906101000a900460ff1615151561244457600080fd5b61244e33856139e2565b151561245957600080fd5b6124638385613fac565b151561246e57600080fd5b60058481548110151561247d57fe5b906000526020600020906002020191506125c3826101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff168152505061436f565b15156125ce57600080fd5b6005838154811015156125dd57fe5b90600052602060002090600202019050612723816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff168152505061436f565b151561272e57600080fd5b61273a82858386613d97565b151561274557600080fd5b61274f848461439f565b50505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156127f957600080fd5b600260149054906101000a900460ff16151561281457600080fd5b80601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061296357506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806129bb5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156129c657600080fd5b600260149054906101000a900460ff161515156129e257600080fd5b6001600260146101000a81548160ff021916908315150217905550565b600080600080600080600080600260149054906101000a900460ff16151515612a2757600080fd5b600589815481101515612a3657fe5b9060005260206000209060020201965060008760010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515612a7857600080fd5b612bae876101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff168152505061452d565b1515612bb957600080fd5b8660010160189054906101000a900463ffffffff1663ffffffff169550600586815481101515612be557fe5b9060005260206000209060020201945086600101601e9054906101000a900461ffff16935086600101601e9054906101000a900461ffff1661ffff1685600101601e9054906101000a900461ffff1661ffff161115612c545784600101601e9054906101000a900461ffff1693505b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d8b1b88886000015487600001546000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050602060405180830381600087803b1515612cfd57600080fd5b6102c65a03f11515612d0e57600080fd5b505050604051805190509250600660008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150612d7e898860010160189054906101000a900463ffffffff1663ffffffff166001870161ffff1686866140bf565b90508660010160186101000a81549063ffffffff021916905580975050505050505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e0257600080fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1515612e8757600080fd5b6102c65a03f11515612e9857600080fd5b505050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1515612f2057600080fd5b6102c65a03f11515612f3157600080fd5b505050565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fcc5780601f10612fa157610100808354040283529160200191612fcc565b820191906000526020600020905b815481529060010190602001808311612faf57829003601f168201915b505050505081565b600381600e81101515612fe357fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561305257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561308e57600080fd5b61309833826139e2565b15156130a357600080fd5b6130ae338383613a4e565b5050565b60125481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b60105481565b60006001905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561315157600080fd5b60115460155410151561316357600080fd5b613172600080600085306140bf565b90506131a081600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613c42565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a826131e761455e565b6000601354306040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b151561328657600080fd5b6102c65a03f1151561329757600080fd5b5050506015600081548092919060010191905055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561330e57600080fd5b600260149054906101000a900460ff1615151561332a57600080fd5b60008263ffffffff1611151561333f57600080fd5b600090505b8163ffffffff1681101561336f57613361600080600086336140bf565b508080600101915050613344565b505050565b60008060008311151561338657600080fd5b60058381548110151561339557fe5b906000526020600020906002020190506134db816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff168152505061436f565b915050919050565b600042905090565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600080600080600060058c81548110151561353157fe5b9060005260206000209060020201905060008160010160189054906101000a900463ffffffff1663ffffffff1614159a50428160010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161115995080600101601c9054906101000a900461ffff1661ffff1698508060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1697508060010160189054906101000a900463ffffffff1663ffffffff1696508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1695508060010160109054906101000a900463ffffffff1663ffffffff1694508060010160149054906101000a900463ffffffff1663ffffffff16935080600101601e9054906101000a900461ffff1661ffff16925080600001549150509193959799509193959799565b60135481565b600080600080600260149054906101000a900460ff1615151561369a57600080fd5b6136a433866139e2565b15156136af57600080fd5b6136b885613374565b15156136c357600080fd5b6136cd8587614655565b15156136d857600080fd5b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55d0f56876000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561377157600080fd5b6102c65a03f1151561378257600080fd5b50505060405180519050935034925060009150600c548401831015156137ae57600c5483039250600191505b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663454a2ab384886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303818588803b151561383e57600080fd5b6125ee5a03f1151561384f57600080fd5b505050506138698563ffffffff168763ffffffff1661439f565b81156138f05760058581548110151561387e57fe5b906000526020600020906002020190507f1c2771fbe007c332593b3adcacf033ce4a97f9cb1f6dd81e40d9a42c66d2e65c858260010160089054906101000a900467ffffffffffffffff16604051808381526020018267ffffffffffffffff1681526020019250505060405180910390a15b505050505050565b60155481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260149054906101000a900460ff1615151561394257600080fd5b600c54341015151561395357600080fd5b61395d8383612425565b60058381548110151561396c57fe5b906000526020600020906002020190507f1c2771fbe007c332593b3adcacf033ce4a97f9cb1f6dd81e40d9a42c66d2e65c838260010160089054906101000a900467ffffffffffffffff16604051808381526020018267ffffffffffffffff1681526020019250505060405180910390a1505050565b60008273ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515613be257600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556008600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b806008600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166008600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613d5f57600080fd5b600260149054906101000a900460ff161515613d7a57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b600081841415613daa5760009050613fa4565b818560010160109054906101000a900463ffffffff1663ffffffff161480613deb5750818560010160149054906101000a900463ffffffff1663ffffffff16145b15613df95760009050613fa4565b838360010160109054906101000a900463ffffffff1663ffffffff161480613e3a5750838360010160149054906101000a900463ffffffff1663ffffffff16145b15613e485760009050613fa4565b60008360010160109054906101000a900463ffffffff1663ffffffff161480613e8b575060008560010160109054906101000a900463ffffffff1663ffffffff16145b15613e995760019050613fa4565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff161480613f0e57508460010160149054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff16145b15613f1c5760009050613fa4565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff161480613f9157508460010160149054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff16145b15613f9f5760009050613fa4565b600190505b949350505050565b60008060006006600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506006600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806140b557508173ffffffffffffffffffffffffffffffffffffffff166009600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9250505092915050565b60006140c9614777565b600063ffffffff88111515156140de57600080fd5b63ffffffff87111515156140f157600080fd5b61ffff861115151561410257600080fd5b610100604051908101604052808681526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018963ffffffff1681526020018863ffffffff168152602001600063ffffffff168152602001600061ffff1681526020018761ffff16815250915060016005805480600101828161418691906147eb565b916000526020600020906002020160008590919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff160217905550505003905063ffffffff81111515156142d757600080fd5b8373ffffffffffffffffffffffffffffffffffffffff167f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad582846060015163ffffffff16856080015163ffffffff1686600001516040518085815260200184815260200183815260200182815260200194505050505060405180910390a261436160008583613a4e565b809250505095945050505050565b6000808260a0015163ffffffff16148015614398575042826040015167ffffffffffffffff1611155b9050919050565b6000806005838154811015156143b157fe5b906000526020600020906002020191506005848154811015156143d057fe5b90600052602060002090600202019050828160010160186101000a81548163ffffffff021916908363ffffffff16021790555061440c826146ae565b614415816146ae565b6009600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690557f6b4808987a5cecdf67d54ca5dc20664fafca80ef7195097800c12549245ab20d6006600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b6000808260a0015163ffffffff1614158015614557575042826040015167ffffffffffffffff1611155b9050919050565b6000806000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac9d94c6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156145f157600080fd5b6102c65a03f1151561460257600080fd5b5050506040518051905091506fffffffffffffffffffffffffffffffff8210151561462c57600080fd5b60028281151561463857fe5b048201905060125481101561464d5760125490505b809250505090565b600080600060058581548110151561466957fe5b9060005260206000209060020201915060058481548110151561468857fe5b906000526020600020906002020190506146a482868387613d97565b9250505092915050565b600381600101601c9054906101000a900461ffff1661ffff16600e811015156146d357fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1642018160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600d81600101601c9054906101000a900461ffff1661ffff16101561477457600181600101601c8282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff1602179055505b50565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b81548183558181151161481857600202816002028360005260206000209182019101614817919061481d565b5b505050565b6148e691905b808211156148e2576000808201600090556001820160006101000a81549067ffffffffffffffff02191690556001820160086101000a81549067ffffffffffffffff02191690556001820160106101000a81549063ffffffff02191690556001820160146101000a81549063ffffffff02191690556001820160186101000a81549063ffffffff021916905560018201601c6101000a81549061ffff021916905560018201601e6101000a81549061ffff021916905550600201614823565b5090565b905600a165627a7a72305820f8d9b433c2551bf75df1dc0ea23997c06080ca37773dc2f06d4578b77692538e0029")
	createResult, contractAddress, createLeftGas, createErr := mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	//调用KittyCoreTest.setCEO(CEOAddress)
	kittyCoreTestAddress := common.HexToAddress("0xe1dfe18e7ca231f0465f5f5b3f4a881f7cbf78f7000000000000000000000000")
	input := common.Hex2Bytes("27d7874cbfaf6e5211f2c4aff8eeccf0bdf6965cb7d37e88bb6244ab08c77bf055497302")
	callResult, callLeftGas, callErr := mockCall(kittyCoreTestAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)

	//部署GeneScienceMock合约
	contractCodeBytes = common.Hex2Bytes("606060405260016000806101000a81548160ff021916908315150217905550341561002957600080fd5b61010e806100386000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806354c15b8214604e5780638d8b1b88146078575b600080fd5b3415605857600080fd5b605e60b5565b604051808215151515815260200191505060405180910390f35b3415608257600080fd5b609f600480803590602001909190803590602001909190505060c7565b6040518082815260200191505060405180910390f35b6000809054906101000a900460ff1681565b60006001600283850181151560d857fe5b04019050929150505600a165627a7a723058206ed791bfc9d9ff016a2b6147572934484aa7405738ad10bdd6aaecd717a2f8e70029")
	createResult, contractAddress, createLeftGas, createErr = mockCreate(contractCodeBytes, config)
	fmt.Printf("New create contract address:%s\n", contractAddress.GetHexString())
	fmt.Printf("New create contract createResult:%v,%d\n", createResult, len(createResult))
	fmt.Printf("New create contract costGas:%v,createErr:%v\n", config.GasLimit-createLeftGas, createErr)

	//CEO地址调用KittyCoreTest.setGeneScienceAddress(GeneScienceMockAddress)
	//geneScienceMockAddress := "0xaacda59c47427a539356346038a7cf36946ddb18000000000000000000000000"
	config.Origin = common.HexToAddress("0xbfaf6e5211f2c4aff8eeccf0bdf6965cb7d37e88bb6244ab08c77bf055497302")
	input = common.Hex2Bytes("27d7874cbfaf6e5211f2c4aff8eeccf0bdf6965cb7d37e88bb6244ab08c77bf055497302")
	callResult, callLeftGas, callErr = mockCall(kittyCoreTestAddress, input, config)
	fmt.Printf("callResult:%v,costGas:%d,callErr:%v\n", callResult, config.GasLimit-callLeftGas, callErr)
}
