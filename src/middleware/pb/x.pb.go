// Code generated by protoc-gen-go. DO NOT EDIT.
// source: x.proto

/*
Package middleware_pb is a generated protocol buffer package.

It is generated from these files:
	x.proto

It has these top-level messages:
	Message
	Transaction
	TransactionRequestMessage
	TransactionSlice
	BlockHeader
	TransactionHash
	Block
	Member
	GroupHeader
	Group
	GroupInfo
	GroupSlice
	GroupIdSlice
	GroupRequestInfo
	Hashes
	SignData
	PubKeyInfo
	ConsensusGroupInitInfo
	ConsensusGroupRawMessage
	SharePiece
	ConsensusSharePieceMessage
	ConsensusSignPubKeyMessage
	ConsensusSignPubkeyReqMessage
	StaticGroupSummary
	ConsensusGroupInitedMessage
	ConsensusCurrentMessage
	ConsensusCastMessage
	ConsensusVerifyMessage
	ConsensusBlockMessage
	ConsensusCreateGroupRawMessage
	ConsensusCreateGroupSignMessage
	ChainInfo
	BlockChainPieceReq
	BlockChainPiece
	BlockReq
	BlockMsgResponse
	GroupChainPieceReq
	GroupChainPiece
	GroupReq
	GroupMsgResponse
	CreateGroupPingMessage
	CreateGroupPongMessage
	ReqSharePieceMessage
	ResponseSharePieceMessage
	SubAccount
*/
package middleware_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=Code" json:"Code,omitempty"`
	Body             []byte  `protobuf:"bytes,2,opt,name=Body" json:"Body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Message) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Transaction struct {
	Data             *string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
	Nonce            *uint64 `protobuf:"varint,2,opt,name=Nonce" json:"Nonce,omitempty"`
	Source           []byte  `protobuf:"bytes,3,opt,name=Source" json:"Source,omitempty"`
	Target           *string `protobuf:"bytes,4,opt,name=Target" json:"Target,omitempty"`
	Type             *int32  `protobuf:"varint,5,req,name=Type" json:"Type,omitempty"`
	Hash             []byte  `protobuf:"bytes,6,opt,name=Hash" json:"Hash,omitempty"`
	ExtraData        []byte  `protobuf:"bytes,7,opt,name=ExtraData" json:"ExtraData,omitempty"`
	ExtraDataType    *int32  `protobuf:"varint,8,opt,name=ExtraDataType" json:"ExtraDataType,omitempty"`
	Sign             []byte  `protobuf:"bytes,9,opt,name=Sign" json:"Sign,omitempty"`
	Time             *string `protobuf:"bytes,10,opt,name=Time" json:"Time,omitempty"`
	RequestId        *uint64 `protobuf:"varint,11,opt,name=RequestId" json:"RequestId,omitempty"`
	SocketRequestId  *string `protobuf:"bytes,12,opt,name=SocketRequestId" json:"SocketRequestId,omitempty"`
	SubTransactions  []byte  `protobuf:"bytes,13,opt,name=SubTransactions" json:"SubTransactions,omitempty"`
	SubHash          []byte  `protobuf:"bytes,14,opt,name=SubHash" json:"SubHash,omitempty"`
	ChainId          *string `protobuf:"bytes,15,opt,name=ChainId" json:"ChainId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Transaction) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *Transaction) GetSource() []byte {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Transaction) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

func (m *Transaction) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *Transaction) GetExtraDataType() int32 {
	if m != nil && m.ExtraDataType != nil {
		return *m.ExtraDataType
	}
	return 0
}

func (m *Transaction) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Transaction) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *Transaction) GetRequestId() uint64 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *Transaction) GetSocketRequestId() string {
	if m != nil && m.SocketRequestId != nil {
		return *m.SocketRequestId
	}
	return ""
}

func (m *Transaction) GetSubTransactions() []byte {
	if m != nil {
		return m.SubTransactions
	}
	return nil
}

func (m *Transaction) GetSubHash() []byte {
	if m != nil {
		return m.SubHash
	}
	return nil
}

func (m *Transaction) GetChainId() string {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return ""
}

type TransactionRequestMessage struct {
	TransactionHashes []*TransactionHash `protobuf:"bytes,1,rep,name=TransactionHashes" json:"TransactionHashes,omitempty"`
	CurrentBlockHash  []byte             `protobuf:"bytes,2,req,name=CurrentBlockHash" json:"CurrentBlockHash,omitempty"`
	BlockHeight       *uint64            `protobuf:"varint,3,req,name=BlockHeight" json:"BlockHeight,omitempty"`
	BlockPv           []byte             `protobuf:"bytes,4,req,name=BlockPv" json:"BlockPv,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *TransactionRequestMessage) Reset()                    { *m = TransactionRequestMessage{} }
func (m *TransactionRequestMessage) String() string            { return proto.CompactTextString(m) }
func (*TransactionRequestMessage) ProtoMessage()               {}
func (*TransactionRequestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TransactionRequestMessage) GetTransactionHashes() []*TransactionHash {
	if m != nil {
		return m.TransactionHashes
	}
	return nil
}

func (m *TransactionRequestMessage) GetCurrentBlockHash() []byte {
	if m != nil {
		return m.CurrentBlockHash
	}
	return nil
}

func (m *TransactionRequestMessage) GetBlockHeight() uint64 {
	if m != nil && m.BlockHeight != nil {
		return *m.BlockHeight
	}
	return 0
}

func (m *TransactionRequestMessage) GetBlockPv() []byte {
	if m != nil {
		return m.BlockPv
	}
	return nil
}

type TransactionSlice struct {
	Transactions     []*Transaction `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TransactionSlice) Reset()                    { *m = TransactionSlice{} }
func (m *TransactionSlice) String() string            { return proto.CompactTextString(m) }
func (*TransactionSlice) ProtoMessage()               {}
func (*TransactionSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TransactionSlice) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BlockHeader struct {
	Hash             []byte             `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	Height           *uint64            `protobuf:"varint,2,opt,name=Height" json:"Height,omitempty"`
	PreHash          []byte             `protobuf:"bytes,3,opt,name=PreHash" json:"PreHash,omitempty"`
	PreTime          []byte             `protobuf:"bytes,4,opt,name=PreTime" json:"PreTime,omitempty"`
	ProveValue       []byte             `protobuf:"bytes,5,opt,name=ProveValue" json:"ProveValue,omitempty"`
	TotalQN          *uint64            `protobuf:"varint,6,opt,name=TotalQN" json:"TotalQN,omitempty"`
	CurTime          []byte             `protobuf:"bytes,7,opt,name=CurTime" json:"CurTime,omitempty"`
	Castor           []byte             `protobuf:"bytes,8,opt,name=Castor" json:"Castor,omitempty"`
	GroupId          []byte             `protobuf:"bytes,9,opt,name=GroupId" json:"GroupId,omitempty"`
	Signature        []byte             `protobuf:"bytes,10,opt,name=Signature" json:"Signature,omitempty"`
	Nonce            *uint64            `protobuf:"varint,11,opt,name=Nonce" json:"Nonce,omitempty"`
	Transactions     []*TransactionHash `protobuf:"bytes,12,rep,name=transactions" json:"transactions,omitempty"`
	TxTree           []byte             `protobuf:"bytes,13,opt,name=TxTree" json:"TxTree,omitempty"`
	ReceiptTree      []byte             `protobuf:"bytes,14,opt,name=ReceiptTree" json:"ReceiptTree,omitempty"`
	StateTree        []byte             `protobuf:"bytes,15,opt,name=StateTree" json:"StateTree,omitempty"`
	ExtraData        []byte             `protobuf:"bytes,16,opt,name=ExtraData" json:"ExtraData,omitempty"`
	Random           []byte             `protobuf:"bytes,17,opt,name=Random" json:"Random,omitempty"`
	ProveRoot        []byte             `protobuf:"bytes,18,opt,name=ProveRoot" json:"ProveRoot,omitempty"`
	EvictedTxs       *Hashes            `protobuf:"bytes,19,opt,name=EvictedTxs" json:"EvictedTxs,omitempty"`
	RequestIds       []byte             `protobuf:"bytes,20,opt,name=RequestIds" json:"RequestIds,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BlockHeader) Reset()                    { *m = BlockHeader{} }
func (m *BlockHeader) String() string            { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()               {}
func (*BlockHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BlockHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockHeader) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BlockHeader) GetPreHash() []byte {
	if m != nil {
		return m.PreHash
	}
	return nil
}

func (m *BlockHeader) GetPreTime() []byte {
	if m != nil {
		return m.PreTime
	}
	return nil
}

func (m *BlockHeader) GetProveValue() []byte {
	if m != nil {
		return m.ProveValue
	}
	return nil
}

func (m *BlockHeader) GetTotalQN() uint64 {
	if m != nil && m.TotalQN != nil {
		return *m.TotalQN
	}
	return 0
}

func (m *BlockHeader) GetCurTime() []byte {
	if m != nil {
		return m.CurTime
	}
	return nil
}

func (m *BlockHeader) GetCastor() []byte {
	if m != nil {
		return m.Castor
	}
	return nil
}

func (m *BlockHeader) GetGroupId() []byte {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (m *BlockHeader) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BlockHeader) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *BlockHeader) GetTransactions() []*TransactionHash {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *BlockHeader) GetTxTree() []byte {
	if m != nil {
		return m.TxTree
	}
	return nil
}

func (m *BlockHeader) GetReceiptTree() []byte {
	if m != nil {
		return m.ReceiptTree
	}
	return nil
}

func (m *BlockHeader) GetStateTree() []byte {
	if m != nil {
		return m.StateTree
	}
	return nil
}

func (m *BlockHeader) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *BlockHeader) GetRandom() []byte {
	if m != nil {
		return m.Random
	}
	return nil
}

func (m *BlockHeader) GetProveRoot() []byte {
	if m != nil {
		return m.ProveRoot
	}
	return nil
}

func (m *BlockHeader) GetEvictedTxs() *Hashes {
	if m != nil {
		return m.EvictedTxs
	}
	return nil
}

func (m *BlockHeader) GetRequestIds() []byte {
	if m != nil {
		return m.RequestIds
	}
	return nil
}

type TransactionHash struct {
	Hash             []byte `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	SubHash          []byte `protobuf:"bytes,2,opt,name=subHash" json:"subHash,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TransactionHash) Reset()                    { *m = TransactionHash{} }
func (m *TransactionHash) String() string            { return proto.CompactTextString(m) }
func (*TransactionHash) ProtoMessage()               {}
func (*TransactionHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TransactionHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *TransactionHash) GetSubHash() []byte {
	if m != nil {
		return m.SubHash
	}
	return nil
}

type Block struct {
	Header           *BlockHeader   `protobuf:"bytes,1,req,name=Header" json:"Header,omitempty"`
	Transactions     []*Transaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type Member struct {
	Id               []byte `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	PubKey           []byte `protobuf:"bytes,2,req,name=PubKey" json:"PubKey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Member) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Member) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type GroupHeader struct {
	Hash             []byte  `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	Parent           []byte  `protobuf:"bytes,2,opt,name=Parent" json:"Parent,omitempty"`
	PreGroup         []byte  `protobuf:"bytes,3,opt,name=PreGroup" json:"PreGroup,omitempty"`
	CreateBlockHash  []byte  `protobuf:"bytes,4,opt,name=CreateBlockHash" json:"CreateBlockHash,omitempty"`
	BeginTime        []byte  `protobuf:"bytes,5,opt,name=BeginTime" json:"BeginTime,omitempty"`
	MemberRoot       []byte  `protobuf:"bytes,6,req,name=MemberRoot" json:"MemberRoot,omitempty"`
	CreateHeight     *uint64 `protobuf:"varint,7,req,name=CreateHeight" json:"CreateHeight,omitempty"`
	Extends          *string `protobuf:"bytes,8,opt,name=Extends" json:"Extends,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupHeader) Reset()                    { *m = GroupHeader{} }
func (m *GroupHeader) String() string            { return proto.CompactTextString(m) }
func (*GroupHeader) ProtoMessage()               {}
func (*GroupHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GroupHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *GroupHeader) GetParent() []byte {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *GroupHeader) GetPreGroup() []byte {
	if m != nil {
		return m.PreGroup
	}
	return nil
}

func (m *GroupHeader) GetCreateBlockHash() []byte {
	if m != nil {
		return m.CreateBlockHash
	}
	return nil
}

func (m *GroupHeader) GetBeginTime() []byte {
	if m != nil {
		return m.BeginTime
	}
	return nil
}

func (m *GroupHeader) GetMemberRoot() []byte {
	if m != nil {
		return m.MemberRoot
	}
	return nil
}

func (m *GroupHeader) GetCreateHeight() uint64 {
	if m != nil && m.CreateHeight != nil {
		return *m.CreateHeight
	}
	return 0
}

func (m *GroupHeader) GetExtends() string {
	if m != nil && m.Extends != nil {
		return *m.Extends
	}
	return ""
}

type Group struct {
	Header           *GroupHeader `protobuf:"bytes,1,req,name=Header" json:"Header,omitempty"`
	Id               []byte       `protobuf:"bytes,2,opt,name=Id" json:"Id,omitempty"`
	PubKey           []byte       `protobuf:"bytes,3,opt,name=PubKey" json:"PubKey,omitempty"`
	Signature        []byte       `protobuf:"bytes,4,opt,name=Signature" json:"Signature,omitempty"`
	Members          [][]byte     `protobuf:"bytes,5,rep,name=Members" json:"Members,omitempty"`
	GroupHeight      *uint64      `protobuf:"varint,6,opt,name=GroupHeight" json:"GroupHeight,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Group) GetHeader() *GroupHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Group) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Group) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Group) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Group) GetMembers() [][]byte {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Group) GetGroupHeight() uint64 {
	if m != nil && m.GroupHeight != nil {
		return *m.GroupHeight
	}
	return 0
}

type GroupInfo struct {
	Groups           []*Group `protobuf:"bytes,1,rep,name=Groups" json:"Groups,omitempty"`
	IsTopGroup       *bool    `protobuf:"varint,2,req,name=IsTopGroup" json:"IsTopGroup,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GroupInfo) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *GroupInfo) GetIsTopGroup() bool {
	if m != nil && m.IsTopGroup != nil {
		return *m.IsTopGroup
	}
	return false
}

type GroupSlice struct {
	Groups           []*Group `protobuf:"bytes,1,rep,name=Groups" json:"Groups,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupSlice) Reset()                    { *m = GroupSlice{} }
func (m *GroupSlice) String() string            { return proto.CompactTextString(m) }
func (*GroupSlice) ProtoMessage()               {}
func (*GroupSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GroupSlice) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GroupIdSlice struct {
	GroupIds         [][]byte `protobuf:"bytes,1,rep,name=GroupIds" json:"GroupIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupIdSlice) Reset()                    { *m = GroupIdSlice{} }
func (m *GroupIdSlice) String() string            { return proto.CompactTextString(m) }
func (*GroupIdSlice) ProtoMessage()               {}
func (*GroupIdSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GroupIdSlice) GetGroupIds() [][]byte {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

type GroupRequestInfo struct {
	CurrentTopGroupId []byte        `protobuf:"bytes,1,req,name=CurrentTopGroupId" json:"CurrentTopGroupId,omitempty"`
	ExistGroupIds     *GroupIdSlice `protobuf:"bytes,2,opt,name=ExistGroupIds" json:"ExistGroupIds,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *GroupRequestInfo) Reset()                    { *m = GroupRequestInfo{} }
func (m *GroupRequestInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupRequestInfo) ProtoMessage()               {}
func (*GroupRequestInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GroupRequestInfo) GetCurrentTopGroupId() []byte {
	if m != nil {
		return m.CurrentTopGroupId
	}
	return nil
}

func (m *GroupRequestInfo) GetExistGroupIds() *GroupIdSlice {
	if m != nil {
		return m.ExistGroupIds
	}
	return nil
}

type Hashes struct {
	Hashes           [][]byte `protobuf:"bytes,1,rep,name=hashes" json:"hashes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Hashes) Reset()                    { *m = Hashes{} }
func (m *Hashes) String() string            { return proto.CompactTextString(m) }
func (*Hashes) ProtoMessage()               {}
func (*Hashes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Hashes) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type SignData struct {
	DataHash         []byte `protobuf:"bytes,1,req,name=DataHash" json:"DataHash,omitempty"`
	DataSign         []byte `protobuf:"bytes,2,req,name=DataSign" json:"DataSign,omitempty"`
	SignMember       []byte `protobuf:"bytes,3,req,name=SignMember" json:"SignMember,omitempty"`
	Version          *int32 `protobuf:"varint,4,opt,name=Version,def=0" json:"Version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SignData) Reset()                    { *m = SignData{} }
func (m *SignData) String() string            { return proto.CompactTextString(m) }
func (*SignData) ProtoMessage()               {}
func (*SignData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

const Default_SignData_Version int32 = 0

func (m *SignData) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *SignData) GetDataSign() []byte {
	if m != nil {
		return m.DataSign
	}
	return nil
}

func (m *SignData) GetSignMember() []byte {
	if m != nil {
		return m.SignMember
	}
	return nil
}

func (m *SignData) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_SignData_Version
}

type PubKeyInfo struct {
	ID               []byte `protobuf:"bytes,1,req,name=ID" json:"ID,omitempty"`
	PublicKey        []byte `protobuf:"bytes,2,req,name=PublicKey" json:"PublicKey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PubKeyInfo) Reset()                    { *m = PubKeyInfo{} }
func (m *PubKeyInfo) String() string            { return proto.CompactTextString(m) }
func (*PubKeyInfo) ProtoMessage()               {}
func (*PubKeyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *PubKeyInfo) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *PubKeyInfo) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type ConsensusGroupInitInfo struct {
	Header           *GroupHeader `protobuf:"bytes,1,req,name=Header" json:"Header,omitempty"`
	Signature        []byte       `protobuf:"bytes,2,req,name=Signature" json:"Signature,omitempty"`
	Mems             [][]byte     `protobuf:"bytes,3,rep,name=Mems" json:"Mems,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ConsensusGroupInitInfo) Reset()                    { *m = ConsensusGroupInitInfo{} }
func (m *ConsensusGroupInitInfo) String() string            { return proto.CompactTextString(m) }
func (*ConsensusGroupInitInfo) ProtoMessage()               {}
func (*ConsensusGroupInitInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ConsensusGroupInitInfo) GetHeader() *GroupHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ConsensusGroupInitInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ConsensusGroupInitInfo) GetMems() [][]byte {
	if m != nil {
		return m.Mems
	}
	return nil
}

type ConsensusGroupRawMessage struct {
	GInfo            *ConsensusGroupInitInfo `protobuf:"bytes,1,req,name=GInfo" json:"GInfo,omitempty"`
	Sign             *SignData               `protobuf:"bytes,3,req,name=sign" json:"sign,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ConsensusGroupRawMessage) Reset()                    { *m = ConsensusGroupRawMessage{} }
func (m *ConsensusGroupRawMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusGroupRawMessage) ProtoMessage()               {}
func (*ConsensusGroupRawMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ConsensusGroupRawMessage) GetGInfo() *ConsensusGroupInitInfo {
	if m != nil {
		return m.GInfo
	}
	return nil
}

func (m *ConsensusGroupRawMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type SharePiece struct {
	Seckey           []byte `protobuf:"bytes,1,req,name=Seckey" json:"Seckey,omitempty"`
	Pubkey           []byte `protobuf:"bytes,2,req,name=Pubkey" json:"Pubkey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SharePiece) Reset()                    { *m = SharePiece{} }
func (m *SharePiece) String() string            { return proto.CompactTextString(m) }
func (*SharePiece) ProtoMessage()               {}
func (*SharePiece) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SharePiece) GetSeckey() []byte {
	if m != nil {
		return m.Seckey
	}
	return nil
}

func (m *SharePiece) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type ConsensusSharePieceMessage struct {
	GHash            []byte      `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	Dest             []byte      `protobuf:"bytes,2,req,name=Dest" json:"Dest,omitempty"`
	SharePiece       *SharePiece `protobuf:"bytes,3,req,name=SharePiece" json:"SharePiece,omitempty"`
	MemCnt           *int32      `protobuf:"varint,4,req,name=MemCnt" json:"MemCnt,omitempty"`
	Sign             *SignData   `protobuf:"bytes,5,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ConsensusSharePieceMessage) Reset()                    { *m = ConsensusSharePieceMessage{} }
func (m *ConsensusSharePieceMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusSharePieceMessage) ProtoMessage()               {}
func (*ConsensusSharePieceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ConsensusSharePieceMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ConsensusSharePieceMessage) GetDest() []byte {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *ConsensusSharePieceMessage) GetSharePiece() *SharePiece {
	if m != nil {
		return m.SharePiece
	}
	return nil
}

func (m *ConsensusSharePieceMessage) GetMemCnt() int32 {
	if m != nil && m.MemCnt != nil {
		return *m.MemCnt
	}
	return 0
}

func (m *ConsensusSharePieceMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ConsensusSignPubKeyMessage struct {
	GHash            []byte    `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	GroupID          []byte    `protobuf:"bytes,2,req,name=GroupID" json:"GroupID,omitempty"`
	SignPK           []byte    `protobuf:"bytes,3,req,name=SignPK" json:"SignPK,omitempty"`
	MemCnt           *int32    `protobuf:"varint,4,req,name=MemCnt" json:"MemCnt,omitempty"`
	SignData         *SignData `protobuf:"bytes,5,req,name=SignData" json:"SignData,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusSignPubKeyMessage) Reset()                    { *m = ConsensusSignPubKeyMessage{} }
func (m *ConsensusSignPubKeyMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusSignPubKeyMessage) ProtoMessage()               {}
func (*ConsensusSignPubKeyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ConsensusSignPubKeyMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ConsensusSignPubKeyMessage) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *ConsensusSignPubKeyMessage) GetSignPK() []byte {
	if m != nil {
		return m.SignPK
	}
	return nil
}

func (m *ConsensusSignPubKeyMessage) GetMemCnt() int32 {
	if m != nil && m.MemCnt != nil {
		return *m.MemCnt
	}
	return 0
}

func (m *ConsensusSignPubKeyMessage) GetSignData() *SignData {
	if m != nil {
		return m.SignData
	}
	return nil
}

type ConsensusSignPubkeyReqMessage struct {
	GroupID          []byte    `protobuf:"bytes,1,req,name=GroupID" json:"GroupID,omitempty"`
	SignData         *SignData `protobuf:"bytes,2,req,name=SignData" json:"SignData,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusSignPubkeyReqMessage) Reset()                    { *m = ConsensusSignPubkeyReqMessage{} }
func (m *ConsensusSignPubkeyReqMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusSignPubkeyReqMessage) ProtoMessage()               {}
func (*ConsensusSignPubkeyReqMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ConsensusSignPubkeyReqMessage) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *ConsensusSignPubkeyReqMessage) GetSignData() *SignData {
	if m != nil {
		return m.SignData
	}
	return nil
}

type StaticGroupSummary struct {
	GroupID          []byte `protobuf:"bytes,1,req,name=GroupID" json:"GroupID,omitempty"`
	GroupPK          []byte `protobuf:"bytes,2,req,name=GroupPK" json:"GroupPK,omitempty"`
	GHash            []byte `protobuf:"bytes,3,req,name=GHash" json:"GHash,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StaticGroupSummary) Reset()                    { *m = StaticGroupSummary{} }
func (m *StaticGroupSummary) String() string            { return proto.CompactTextString(m) }
func (*StaticGroupSummary) ProtoMessage()               {}
func (*StaticGroupSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *StaticGroupSummary) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *StaticGroupSummary) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *StaticGroupSummary) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

type ConsensusGroupInitedMessage struct {
	GHash            []byte    `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	GroupID          []byte    `protobuf:"bytes,2,req,name=GroupID" json:"GroupID,omitempty"`
	GroupPK          []byte    `protobuf:"bytes,3,req,name=GroupPK" json:"GroupPK,omitempty"`
	CreateHeight     *uint64   `protobuf:"varint,4,req,name=CreateHeight" json:"CreateHeight,omitempty"`
	ParentSign       []byte    `protobuf:"bytes,5,req,name=ParentSign" json:"ParentSign,omitempty"`
	MemMask          []byte    `protobuf:"bytes,6,req,name=MemMask" json:"MemMask,omitempty"`
	MemCnt           *int32    `protobuf:"varint,7,req,name=MemCnt" json:"MemCnt,omitempty"`
	Sign             *SignData `protobuf:"bytes,8,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusGroupInitedMessage) Reset()                    { *m = ConsensusGroupInitedMessage{} }
func (m *ConsensusGroupInitedMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusGroupInitedMessage) ProtoMessage()               {}
func (*ConsensusGroupInitedMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ConsensusGroupInitedMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ConsensusGroupInitedMessage) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *ConsensusGroupInitedMessage) GetGroupPK() []byte {
	if m != nil {
		return m.GroupPK
	}
	return nil
}

func (m *ConsensusGroupInitedMessage) GetCreateHeight() uint64 {
	if m != nil && m.CreateHeight != nil {
		return *m.CreateHeight
	}
	return 0
}

func (m *ConsensusGroupInitedMessage) GetParentSign() []byte {
	if m != nil {
		return m.ParentSign
	}
	return nil
}

func (m *ConsensusGroupInitedMessage) GetMemMask() []byte {
	if m != nil {
		return m.MemMask
	}
	return nil
}

func (m *ConsensusGroupInitedMessage) GetMemCnt() int32 {
	if m != nil && m.MemCnt != nil {
		return *m.MemCnt
	}
	return 0
}

func (m *ConsensusGroupInitedMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ConsensusCurrentMessage struct {
	GroupID          []byte    `protobuf:"bytes,1,opt,name=GroupID" json:"GroupID,omitempty"`
	PreHash          []byte    `protobuf:"bytes,2,req,name=PreHash" json:"PreHash,omitempty"`
	PreTime          []byte    `protobuf:"bytes,3,req,name=PreTime" json:"PreTime,omitempty"`
	BlockHeight      *uint64   `protobuf:"varint,4,req,name=BlockHeight" json:"BlockHeight,omitempty"`
	Sign             *SignData `protobuf:"bytes,6,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusCurrentMessage) Reset()                    { *m = ConsensusCurrentMessage{} }
func (m *ConsensusCurrentMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusCurrentMessage) ProtoMessage()               {}
func (*ConsensusCurrentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ConsensusCurrentMessage) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *ConsensusCurrentMessage) GetPreHash() []byte {
	if m != nil {
		return m.PreHash
	}
	return nil
}

func (m *ConsensusCurrentMessage) GetPreTime() []byte {
	if m != nil {
		return m.PreTime
	}
	return nil
}

func (m *ConsensusCurrentMessage) GetBlockHeight() uint64 {
	if m != nil && m.BlockHeight != nil {
		return *m.BlockHeight
	}
	return 0
}

func (m *ConsensusCurrentMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ConsensusCastMessage struct {
	Bh               *BlockHeader `protobuf:"bytes,1,req,name=Bh" json:"Bh,omitempty"`
	GroupID          []byte       `protobuf:"bytes,2,opt,name=GroupID" json:"GroupID,omitempty"`
	Sign             *SignData    `protobuf:"bytes,3,req,name=Sign" json:"Sign,omitempty"`
	ProveHash        [][]byte     `protobuf:"bytes,4,rep,name=ProveHash" json:"ProveHash,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ConsensusCastMessage) Reset()                    { *m = ConsensusCastMessage{} }
func (m *ConsensusCastMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusCastMessage) ProtoMessage()               {}
func (*ConsensusCastMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ConsensusCastMessage) GetBh() *BlockHeader {
	if m != nil {
		return m.Bh
	}
	return nil
}

func (m *ConsensusCastMessage) GetGroupID() []byte {
	if m != nil {
		return m.GroupID
	}
	return nil
}

func (m *ConsensusCastMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ConsensusCastMessage) GetProveHash() [][]byte {
	if m != nil {
		return m.ProveHash
	}
	return nil
}

type ConsensusVerifyMessage struct {
	BlockHash        []byte    `protobuf:"bytes,1,req,name=BlockHash" json:"BlockHash,omitempty"`
	RandomSign       []byte    `protobuf:"bytes,2,req,name=RandomSign" json:"RandomSign,omitempty"`
	Sign             *SignData `protobuf:"bytes,3,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusVerifyMessage) Reset()                    { *m = ConsensusVerifyMessage{} }
func (m *ConsensusVerifyMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusVerifyMessage) ProtoMessage()               {}
func (*ConsensusVerifyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ConsensusVerifyMessage) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ConsensusVerifyMessage) GetRandomSign() []byte {
	if m != nil {
		return m.RandomSign
	}
	return nil
}

func (m *ConsensusVerifyMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ConsensusBlockMessage struct {
	Block            *Block `protobuf:"bytes,1,req,name=Block" json:"Block,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ConsensusBlockMessage) Reset()                    { *m = ConsensusBlockMessage{} }
func (m *ConsensusBlockMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusBlockMessage) ProtoMessage()               {}
func (*ConsensusBlockMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ConsensusBlockMessage) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type ConsensusCreateGroupRawMessage struct {
	GInfo            *ConsensusGroupInitInfo `protobuf:"bytes,1,req,name=GInfo" json:"GInfo,omitempty"`
	Sign             *SignData               `protobuf:"bytes,2,req,name=sign" json:"sign,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ConsensusCreateGroupRawMessage) Reset()                    { *m = ConsensusCreateGroupRawMessage{} }
func (m *ConsensusCreateGroupRawMessage) String() string            { return proto.CompactTextString(m) }
func (*ConsensusCreateGroupRawMessage) ProtoMessage()               {}
func (*ConsensusCreateGroupRawMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ConsensusCreateGroupRawMessage) GetGInfo() *ConsensusGroupInitInfo {
	if m != nil {
		return m.GInfo
	}
	return nil
}

func (m *ConsensusCreateGroupRawMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ConsensusCreateGroupSignMessage struct {
	GHash            []byte    `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	Sign             *SignData `protobuf:"bytes,2,req,name=sign" json:"sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ConsensusCreateGroupSignMessage) Reset()         { *m = ConsensusCreateGroupSignMessage{} }
func (m *ConsensusCreateGroupSignMessage) String() string { return proto.CompactTextString(m) }
func (*ConsensusCreateGroupSignMessage) ProtoMessage()    {}
func (*ConsensusCreateGroupSignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *ConsensusCreateGroupSignMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ConsensusCreateGroupSignMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ChainInfo struct {
	TopBlockHash     []byte    `protobuf:"bytes,1,req,name=TopBlockHash" json:"TopBlockHash,omitempty"`
	TotalQn          *uint64   `protobuf:"varint,2,req,name=TotalQn" json:"TotalQn,omitempty"`
	TopBlockHeight   *uint64   `protobuf:"varint,3,req,name=TopBlockHeight" json:"TopBlockHeight,omitempty"`
	PreHash          []byte    `protobuf:"bytes,4,req,name=PreHash" json:"PreHash,omitempty"`
	TopGroupHeight   *uint64   `protobuf:"varint,5,req,name=TopGroupHeight" json:"TopGroupHeight,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,6,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ChainInfo) Reset()                    { *m = ChainInfo{} }
func (m *ChainInfo) String() string            { return proto.CompactTextString(m) }
func (*ChainInfo) ProtoMessage()               {}
func (*ChainInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ChainInfo) GetTopBlockHash() []byte {
	if m != nil {
		return m.TopBlockHash
	}
	return nil
}

func (m *ChainInfo) GetTotalQn() uint64 {
	if m != nil && m.TotalQn != nil {
		return *m.TotalQn
	}
	return 0
}

func (m *ChainInfo) GetTopBlockHeight() uint64 {
	if m != nil && m.TopBlockHeight != nil {
		return *m.TopBlockHeight
	}
	return 0
}

func (m *ChainInfo) GetPreHash() []byte {
	if m != nil {
		return m.PreHash
	}
	return nil
}

func (m *ChainInfo) GetTopGroupHeight() uint64 {
	if m != nil && m.TopGroupHeight != nil {
		return *m.TopGroupHeight
	}
	return 0
}

func (m *ChainInfo) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type BlockChainPieceReq struct {
	Height           *uint64   `protobuf:"varint,1,req,name=Height" json:"Height,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BlockChainPieceReq) Reset()                    { *m = BlockChainPieceReq{} }
func (m *BlockChainPieceReq) String() string            { return proto.CompactTextString(m) }
func (*BlockChainPieceReq) ProtoMessage()               {}
func (*BlockChainPieceReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *BlockChainPieceReq) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BlockChainPieceReq) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type BlockChainPiece struct {
	BlockHeaders     []*BlockHeader `protobuf:"bytes,1,rep,name=BlockHeaders" json:"BlockHeaders,omitempty"`
	TopHeader        *BlockHeader   `protobuf:"bytes,2,req,name=TopHeader" json:"TopHeader,omitempty"`
	SignInfo         *SignData      `protobuf:"bytes,3,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BlockChainPiece) Reset()                    { *m = BlockChainPiece{} }
func (m *BlockChainPiece) String() string            { return proto.CompactTextString(m) }
func (*BlockChainPiece) ProtoMessage()               {}
func (*BlockChainPiece) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *BlockChainPiece) GetBlockHeaders() []*BlockHeader {
	if m != nil {
		return m.BlockHeaders
	}
	return nil
}

func (m *BlockChainPiece) GetTopHeader() *BlockHeader {
	if m != nil {
		return m.TopHeader
	}
	return nil
}

func (m *BlockChainPiece) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type BlockReq struct {
	Height           *uint64   `protobuf:"varint,1,req,name=Height" json:"Height,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BlockReq) Reset()                    { *m = BlockReq{} }
func (m *BlockReq) String() string            { return proto.CompactTextString(m) }
func (*BlockReq) ProtoMessage()               {}
func (*BlockReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *BlockReq) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BlockReq) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type BlockMsgResponse struct {
	IsLast           *bool     `protobuf:"varint,1,req,name=IsLast" json:"IsLast,omitempty"`
	Block            *Block    `protobuf:"bytes,2,opt,name=Block" json:"Block,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,3,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BlockMsgResponse) Reset()                    { *m = BlockMsgResponse{} }
func (m *BlockMsgResponse) String() string            { return proto.CompactTextString(m) }
func (*BlockMsgResponse) ProtoMessage()               {}
func (*BlockMsgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *BlockMsgResponse) GetIsLast() bool {
	if m != nil && m.IsLast != nil {
		return *m.IsLast
	}
	return false
}

func (m *BlockMsgResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *BlockMsgResponse) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type GroupChainPieceReq struct {
	Height           *uint64   `protobuf:"varint,1,req,name=Height" json:"Height,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GroupChainPieceReq) Reset()                    { *m = GroupChainPieceReq{} }
func (m *GroupChainPieceReq) String() string            { return proto.CompactTextString(m) }
func (*GroupChainPieceReq) ProtoMessage()               {}
func (*GroupChainPieceReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *GroupChainPieceReq) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *GroupChainPieceReq) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type GroupChainPiece struct {
	Groups           []*Group  `protobuf:"bytes,1,rep,name=Groups" json:"Groups,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GroupChainPiece) Reset()                    { *m = GroupChainPiece{} }
func (m *GroupChainPiece) String() string            { return proto.CompactTextString(m) }
func (*GroupChainPiece) ProtoMessage()               {}
func (*GroupChainPiece) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GroupChainPiece) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *GroupChainPiece) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type GroupReq struct {
	Height           *uint64   `protobuf:"varint,1,req,name=Height" json:"Height,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,2,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GroupReq) Reset()                    { *m = GroupReq{} }
func (m *GroupReq) String() string            { return proto.CompactTextString(m) }
func (*GroupReq) ProtoMessage()               {}
func (*GroupReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GroupReq) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *GroupReq) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type GroupMsgResponse struct {
	IsLast           *bool     `protobuf:"varint,1,req,name=IsLast" json:"IsLast,omitempty"`
	Group            *Group    `protobuf:"bytes,2,opt,name=Group" json:"Group,omitempty"`
	SignInfo         *SignData `protobuf:"bytes,3,req,name=SignInfo" json:"SignInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GroupMsgResponse) Reset()                    { *m = GroupMsgResponse{} }
func (m *GroupMsgResponse) String() string            { return proto.CompactTextString(m) }
func (*GroupMsgResponse) ProtoMessage()               {}
func (*GroupMsgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *GroupMsgResponse) GetIsLast() bool {
	if m != nil && m.IsLast != nil {
		return *m.IsLast
	}
	return false
}

func (m *GroupMsgResponse) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMsgResponse) GetSignInfo() *SignData {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type CreateGroupPingMessage struct {
	FromGroupID      []byte    `protobuf:"bytes,1,req,name=FromGroupID" json:"FromGroupID,omitempty"`
	PingID           *string   `protobuf:"bytes,2,req,name=PingID" json:"PingID,omitempty"`
	BaseHeight       *uint64   `protobuf:"varint,3,req,name=BaseHeight" json:"BaseHeight,omitempty"`
	Sign             *SignData `protobuf:"bytes,4,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateGroupPingMessage) Reset()                    { *m = CreateGroupPingMessage{} }
func (m *CreateGroupPingMessage) String() string            { return proto.CompactTextString(m) }
func (*CreateGroupPingMessage) ProtoMessage()               {}
func (*CreateGroupPingMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CreateGroupPingMessage) GetFromGroupID() []byte {
	if m != nil {
		return m.FromGroupID
	}
	return nil
}

func (m *CreateGroupPingMessage) GetPingID() string {
	if m != nil && m.PingID != nil {
		return *m.PingID
	}
	return ""
}

func (m *CreateGroupPingMessage) GetBaseHeight() uint64 {
	if m != nil && m.BaseHeight != nil {
		return *m.BaseHeight
	}
	return 0
}

func (m *CreateGroupPingMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type CreateGroupPongMessage struct {
	PingID           *string   `protobuf:"bytes,1,req,name=PingID" json:"PingID,omitempty"`
	Ts               []byte    `protobuf:"bytes,2,req,name=Ts" json:"Ts,omitempty"`
	Sign             *SignData `protobuf:"bytes,3,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateGroupPongMessage) Reset()                    { *m = CreateGroupPongMessage{} }
func (m *CreateGroupPongMessage) String() string            { return proto.CompactTextString(m) }
func (*CreateGroupPongMessage) ProtoMessage()               {}
func (*CreateGroupPongMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *CreateGroupPongMessage) GetPingID() string {
	if m != nil && m.PingID != nil {
		return *m.PingID
	}
	return ""
}

func (m *CreateGroupPongMessage) GetTs() []byte {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *CreateGroupPongMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ReqSharePieceMessage struct {
	GHash            []byte    `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	Sign             *SignData `protobuf:"bytes,2,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ReqSharePieceMessage) Reset()                    { *m = ReqSharePieceMessage{} }
func (m *ReqSharePieceMessage) String() string            { return proto.CompactTextString(m) }
func (*ReqSharePieceMessage) ProtoMessage()               {}
func (*ReqSharePieceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ReqSharePieceMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ReqSharePieceMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type ResponseSharePieceMessage struct {
	GHash            []byte      `protobuf:"bytes,1,req,name=GHash" json:"GHash,omitempty"`
	SharePiece       *SharePiece `protobuf:"bytes,2,req,name=SharePiece" json:"SharePiece,omitempty"`
	Sign             *SignData   `protobuf:"bytes,3,req,name=Sign" json:"Sign,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ResponseSharePieceMessage) Reset()                    { *m = ResponseSharePieceMessage{} }
func (m *ResponseSharePieceMessage) String() string            { return proto.CompactTextString(m) }
func (*ResponseSharePieceMessage) ProtoMessage()               {}
func (*ResponseSharePieceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ResponseSharePieceMessage) GetGHash() []byte {
	if m != nil {
		return m.GHash
	}
	return nil
}

func (m *ResponseSharePieceMessage) GetSharePiece() *SharePiece {
	if m != nil {
		return m.SharePiece
	}
	return nil
}

func (m *ResponseSharePieceMessage) GetSign() *SignData {
	if m != nil {
		return m.Sign
	}
	return nil
}

type SubAccount struct {
	Balance          []byte  `protobuf:"bytes,1,opt,name=Balance" json:"Balance,omitempty"`
	Nonce            *uint64 `protobuf:"varint,2,opt,name=Nonce" json:"Nonce,omitempty"`
	Assets           []byte  `protobuf:"bytes,3,opt,name=Assets" json:"Assets,omitempty"`
	Ft               []byte  `protobuf:"bytes,4,opt,name=Ft" json:"Ft,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubAccount) Reset()                    { *m = SubAccount{} }
func (m *SubAccount) String() string            { return proto.CompactTextString(m) }
func (*SubAccount) ProtoMessage()               {}
func (*SubAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *SubAccount) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *SubAccount) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *SubAccount) GetAssets() []byte {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *SubAccount) GetFt() []byte {
	if m != nil {
		return m.Ft
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "middleware.pb.Message")
	proto.RegisterType((*Transaction)(nil), "middleware.pb.Transaction")
	proto.RegisterType((*TransactionRequestMessage)(nil), "middleware.pb.TransactionRequestMessage")
	proto.RegisterType((*TransactionSlice)(nil), "middleware.pb.TransactionSlice")
	proto.RegisterType((*BlockHeader)(nil), "middleware.pb.BlockHeader")
	proto.RegisterType((*TransactionHash)(nil), "middleware.pb.TransactionHash")
	proto.RegisterType((*Block)(nil), "middleware.pb.Block")
	proto.RegisterType((*Member)(nil), "middleware.pb.Member")
	proto.RegisterType((*GroupHeader)(nil), "middleware.pb.GroupHeader")
	proto.RegisterType((*Group)(nil), "middleware.pb.Group")
	proto.RegisterType((*GroupInfo)(nil), "middleware.pb.GroupInfo")
	proto.RegisterType((*GroupSlice)(nil), "middleware.pb.GroupSlice")
	proto.RegisterType((*GroupIdSlice)(nil), "middleware.pb.GroupIdSlice")
	proto.RegisterType((*GroupRequestInfo)(nil), "middleware.pb.GroupRequestInfo")
	proto.RegisterType((*Hashes)(nil), "middleware.pb.Hashes")
	proto.RegisterType((*SignData)(nil), "middleware.pb.SignData")
	proto.RegisterType((*PubKeyInfo)(nil), "middleware.pb.PubKeyInfo")
	proto.RegisterType((*ConsensusGroupInitInfo)(nil), "middleware.pb.ConsensusGroupInitInfo")
	proto.RegisterType((*ConsensusGroupRawMessage)(nil), "middleware.pb.ConsensusGroupRawMessage")
	proto.RegisterType((*SharePiece)(nil), "middleware.pb.SharePiece")
	proto.RegisterType((*ConsensusSharePieceMessage)(nil), "middleware.pb.ConsensusSharePieceMessage")
	proto.RegisterType((*ConsensusSignPubKeyMessage)(nil), "middleware.pb.ConsensusSignPubKeyMessage")
	proto.RegisterType((*ConsensusSignPubkeyReqMessage)(nil), "middleware.pb.ConsensusSignPubkeyReqMessage")
	proto.RegisterType((*StaticGroupSummary)(nil), "middleware.pb.StaticGroupSummary")
	proto.RegisterType((*ConsensusGroupInitedMessage)(nil), "middleware.pb.ConsensusGroupInitedMessage")
	proto.RegisterType((*ConsensusCurrentMessage)(nil), "middleware.pb.ConsensusCurrentMessage")
	proto.RegisterType((*ConsensusCastMessage)(nil), "middleware.pb.ConsensusCastMessage")
	proto.RegisterType((*ConsensusVerifyMessage)(nil), "middleware.pb.ConsensusVerifyMessage")
	proto.RegisterType((*ConsensusBlockMessage)(nil), "middleware.pb.ConsensusBlockMessage")
	proto.RegisterType((*ConsensusCreateGroupRawMessage)(nil), "middleware.pb.ConsensusCreateGroupRawMessage")
	proto.RegisterType((*ConsensusCreateGroupSignMessage)(nil), "middleware.pb.ConsensusCreateGroupSignMessage")
	proto.RegisterType((*ChainInfo)(nil), "middleware.pb.ChainInfo")
	proto.RegisterType((*BlockChainPieceReq)(nil), "middleware.pb.BlockChainPieceReq")
	proto.RegisterType((*BlockChainPiece)(nil), "middleware.pb.BlockChainPiece")
	proto.RegisterType((*BlockReq)(nil), "middleware.pb.BlockReq")
	proto.RegisterType((*BlockMsgResponse)(nil), "middleware.pb.BlockMsgResponse")
	proto.RegisterType((*GroupChainPieceReq)(nil), "middleware.pb.GroupChainPieceReq")
	proto.RegisterType((*GroupChainPiece)(nil), "middleware.pb.GroupChainPiece")
	proto.RegisterType((*GroupReq)(nil), "middleware.pb.GroupReq")
	proto.RegisterType((*GroupMsgResponse)(nil), "middleware.pb.GroupMsgResponse")
	proto.RegisterType((*CreateGroupPingMessage)(nil), "middleware.pb.CreateGroupPingMessage")
	proto.RegisterType((*CreateGroupPongMessage)(nil), "middleware.pb.CreateGroupPongMessage")
	proto.RegisterType((*ReqSharePieceMessage)(nil), "middleware.pb.ReqSharePieceMessage")
	proto.RegisterType((*ResponseSharePieceMessage)(nil), "middleware.pb.ResponseSharePieceMessage")
	proto.RegisterType((*SubAccount)(nil), "middleware.pb.SubAccount")
}

func init() { proto.RegisterFile("x.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x6f, 0xdb, 0x56,
	0x12, 0x07, 0x29, 0xea, 0xdf, 0x88, 0xb6, 0x6c, 0xda, 0x89, 0xe9, 0x04, 0x9b, 0x15, 0xb8, 0xc9,
	0xc2, 0xd9, 0xdd, 0x18, 0x81, 0x91, 0xcb, 0x16, 0xbd, 0xc4, 0xb2, 0x93, 0x18, 0x89, 0x13, 0x55,
	0x16, 0xdc, 0x43, 0x4f, 0x4f, 0xd4, 0x44, 0x26, 0x6c, 0x91, 0x32, 0x1f, 0x99, 0xd8, 0x87, 0x02,
	0xbd, 0x35, 0x3d, 0x17, 0xe8, 0xad, 0xed, 0xa5, 0x97, 0x7e, 0x8b, 0x7e, 0xb4, 0xe2, 0xcd, 0x7b,
	0x8f, 0xa4, 0x64, 0xd9, 0x92, 0x91, 0x9c, 0x04, 0x3e, 0xce, 0x9b, 0xf9, 0xcd, 0xcc, 0x6f, 0xfe,
	0x50, 0x50, 0xbd, 0xd8, 0x1e, 0xc7, 0x51, 0x12, 0x39, 0x4b, 0xa3, 0x60, 0x30, 0x38, 0xc3, 0x8f,
	0x2c, 0xc6, 0xed, 0x71, 0xdf, 0x7b, 0x04, 0xd5, 0x43, 0xe4, 0x9c, 0x0d, 0xd1, 0xb1, 0xc1, 0x6a,
	0x47, 0x03, 0x74, 0x8d, 0x96, 0xb1, 0xb5, 0x24, 0x9e, 0x76, 0xa3, 0xc1, 0xa5, 0x6b, 0xb6, 0x8c,
	0x2d, 0xdb, 0xfb, 0xd9, 0x84, 0x46, 0x2f, 0x66, 0x21, 0x67, 0x7e, 0x12, 0x44, 0xa1, 0x78, 0xbb,
	0xc7, 0x12, 0x46, 0xb2, 0x75, 0x67, 0x09, 0xca, 0x6f, 0xa3, 0xd0, 0x47, 0x12, 0xb6, 0x9c, 0x65,
	0xa8, 0x1c, 0x45, 0x69, 0xec, 0xa3, 0x5b, 0x12, 0x97, 0xc5, 0x73, 0x8f, 0xc5, 0x43, 0x4c, 0x5c,
	0x8b, 0xc4, 0x6d, 0xb0, 0x7a, 0x97, 0x63, 0x74, 0xcb, 0x2d, 0x73, 0xab, 0x2c, 0x9e, 0x5e, 0x31,
	0x7e, 0xe2, 0x56, 0x48, 0x76, 0x15, 0xea, 0xfb, 0x17, 0x49, 0xcc, 0x48, 0x7b, 0x95, 0x8e, 0xee,
	0xc0, 0x52, 0x76, 0x44, 0xf7, 0x6a, 0x2d, 0x43, 0xde, 0x3b, 0x0a, 0x86, 0xa1, 0x5b, 0x27, 0x21,
	0xa1, 0x33, 0x18, 0xa1, 0x0b, 0x64, 0x61, 0x15, 0xea, 0x5d, 0x3c, 0x4f, 0x91, 0x27, 0x07, 0x03,
	0xb7, 0x41, 0xa0, 0x36, 0xa0, 0x79, 0x14, 0xf9, 0xa7, 0x98, 0xe4, 0x2f, 0x6c, 0x92, 0x15, 0x2f,
	0xd2, 0x7e, 0xc1, 0x39, 0xee, 0x2e, 0x91, 0xca, 0x26, 0x54, 0x8f, 0xd2, 0x3e, 0x61, 0x5b, 0xd6,
	0x07, 0xed, 0x13, 0x16, 0x84, 0x07, 0x03, 0xb7, 0x29, 0xae, 0x7a, 0xbf, 0x18, 0xb0, 0x59, 0xb8,
	0xa8, 0x34, 0xeb, 0x78, 0xfe, 0x1f, 0x56, 0x0b, 0x2f, 0x85, 0x1e, 0xe4, 0xae, 0xd1, 0x2a, 0x6d,
	0x35, 0x76, 0x1e, 0x6c, 0x4f, 0x64, 0x61, 0x7b, 0x4a, 0xce, 0x71, 0x61, 0xa5, 0x9d, 0xc6, 0x31,
	0x86, 0xc9, 0xee, 0x59, 0xe4, 0x9f, 0x12, 0x06, 0xb3, 0x65, 0x6e, 0xd9, 0xce, 0x1a, 0x34, 0xe4,
	0x11, 0x06, 0xc3, 0x93, 0xc4, 0x2d, 0xb5, 0xcc, 0x2d, 0x4b, 0x00, 0xa3, 0xc3, 0xce, 0x07, 0xd7,
	0x12, 0x52, 0xde, 0x1e, 0xac, 0x14, 0x54, 0x1e, 0x9d, 0x05, 0x3e, 0x3a, 0x4f, 0xc1, 0x4e, 0x8a,
	0x4e, 0x4a, 0x24, 0xf7, 0xae, 0x47, 0xe2, 0xfd, 0x59, 0xca, 0x8c, 0xb1, 0x01, 0xc6, 0x59, 0xa6,
	0x0c, 0x9d, 0x55, 0x05, 0x42, 0x66, 0xbd, 0x09, 0xd5, 0x4e, 0x8c, 0x24, 0x50, 0xd2, 0xe1, 0xea,
	0xc4, 0x48, 0x59, 0xb1, 0xe8, 0xc0, 0x01, 0xe8, 0xc4, 0xd1, 0x07, 0x3c, 0x66, 0x67, 0xa9, 0xc8,
	0xbe, 0x12, 0xea, 0x45, 0x09, 0x3b, 0xfb, 0xe6, 0x2d, 0x11, 0x80, 0xd4, 0xb4, 0xd3, 0x98, 0x6e,
	0x55, 0xb5, 0x9d, 0x36, 0xe3, 0x49, 0x14, 0x53, 0xde, 0xe9, 0xc6, 0xcb, 0x38, 0x4a, 0xc7, 0x07,
	0x03, 0x95, 0xfa, 0x55, 0xa8, 0x0b, 0x22, 0xb0, 0x24, 0x8d, 0x65, 0xfe, 0xed, 0x9c, 0x90, 0x32,
	0xf7, 0xcf, 0xa6, 0x5c, 0xb7, 0x17, 0x4a, 0x82, 0xa0, 0xed, 0x45, 0x2f, 0x46, 0x54, 0x7c, 0x58,
	0x83, 0x46, 0x17, 0x7d, 0x0c, 0xc6, 0x09, 0x1d, 0x2e, 0x67, 0xc6, 0x13, 0x96, 0x20, 0x1d, 0x35,
	0xaf, 0x52, 0x78, 0x45, 0xfb, 0xd0, 0x65, 0xe1, 0x20, 0x1a, 0xb9, 0xab, 0x5a, 0x84, 0x22, 0xd1,
	0x8d, 0xa2, 0xc4, 0x75, 0xe8, 0xe8, 0x31, 0xc0, 0xfe, 0x87, 0xc0, 0x4f, 0x70, 0xd0, 0xbb, 0xe0,
	0xee, 0x5a, 0xcb, 0xd8, 0x6a, 0xec, 0xdc, 0x99, 0x42, 0x28, 0x39, 0x24, 0xe2, 0x98, 0x91, 0x98,
	0xbb, 0xeb, 0x54, 0xa0, 0x4f, 0xa1, 0x39, 0x8d, 0xdf, 0x06, 0xeb, 0x24, 0x4f, 0x57, 0x13, 0xaa,
	0x5c, 0xb1, 0x59, 0x96, 0x34, 0x42, 0x99, 0x92, 0xeb, 0xfc, 0x47, 0x24, 0x52, 0x24, 0xd8, 0x35,
	0x5a, 0xe6, 0x0c, 0x4a, 0x14, 0x29, 0x30, 0x4d, 0x22, 0x73, 0x2e, 0x89, 0x1e, 0x42, 0xe5, 0x10,
	0x47, 0x7d, 0x8c, 0x1d, 0x00, 0xf3, 0x60, 0x40, 0x36, 0x28, 0x20, 0x9d, 0xb4, 0xff, 0x1a, 0x2f,
	0x25, 0xad, 0xbd, 0x3f, 0x0c, 0x68, 0x50, 0x56, 0xaf, 0xa3, 0x5a, 0x87, 0x89, 0x6a, 0x90, 0xd0,
	0x9d, 0x15, 0xa8, 0x75, 0x62, 0x24, 0x79, 0xc5, 0xb5, 0x0d, 0x68, 0xb6, 0x63, 0x64, 0x09, 0xe6,
	0xf5, 0x62, 0xe9, 0x48, 0xef, 0xe2, 0x30, 0x08, 0x89, 0x50, 0x65, 0x4d, 0x43, 0x89, 0x88, 0xa2,
	0x5f, 0x21, 0x3c, 0xeb, 0x60, 0xcb, 0xfb, 0x8a, 0xd2, 0x55, 0x5d, 0x57, 0xfb, 0x17, 0x09, 0x86,
	0x03, 0x4e, 0xdc, 0xab, 0x7b, 0x9f, 0x0c, 0x28, 0x93, 0xd9, 0xb9, 0x41, 0x2b, 0x3a, 0x23, 0x1d,
	0x37, 0x33, 0x57, 0xa4, 0xe3, 0xa5, 0xab, 0xe4, 0xb5, 0x74, 0xa6, 0x24, 0x3e, 0xee, 0x96, 0x5b,
	0x25, 0x49, 0x3c, 0xa5, 0x8e, 0xb0, 0x51, 0x9d, 0x78, 0xfb, 0x50, 0x97, 0x65, 0x10, 0xbe, 0x8f,
	0x9c, 0x87, 0x50, 0xa1, 0x07, 0x5d, 0xd5, 0xeb, 0xb3, 0xd0, 0x08, 0xc7, 0x0f, 0x78, 0x2f, 0x1a,
	0xcb, 0xc0, 0x89, 0xc0, 0xd7, 0xbc, 0x1d, 0x00, 0x7a, 0x94, 0x3d, 0x62, 0x21, 0x3d, 0x5e, 0x0b,
	0x6c, 0x55, 0x81, 0xf2, 0xd6, 0x0a, 0xd4, 0xd4, 0xb3, 0xbc, 0x67, 0x7b, 0x0c, 0x56, 0xe8, 0x44,
	0xd3, 0x54, 0x60, 0xdc, 0x84, 0x55, 0xd5, 0xd3, 0x34, 0x84, 0x8c, 0x0d, 0x3b, 0xa2, 0xc3, 0x07,
	0x3c, 0xc9, 0xb4, 0x98, 0x44, 0xff, 0xfb, 0xb3, 0xac, 0x2b, 0xa3, 0x9e, 0x0b, 0x15, 0x55, 0x0e,
	0xcb, 0x50, 0x39, 0xc9, 0x9b, 0xab, 0xed, 0x1d, 0x43, 0x4d, 0x84, 0x54, 0x94, 0x9f, 0x80, 0x26,
	0x7e, 0x15, 0x97, 0x4c, 0xc9, 0x1d, 0x71, 0x42, 0xa3, 0x43, 0xb6, 0x54, 0x07, 0x40, 0x3c, 0xc9,
	0x98, 0x53, 0x47, 0x15, 0x67, 0xd5, 0x63, 0x8c, 0x79, 0x10, 0x85, 0x94, 0x94, 0xf2, 0x57, 0xc6,
	0x53, 0xef, 0xbf, 0x00, 0x32, 0x75, 0xe4, 0x8e, 0x48, 0xea, 0x9e, 0xd2, 0x29, 0xca, 0x39, 0xed,
	0x9f, 0x05, 0x7e, 0x4e, 0x68, 0x84, 0xbb, 0xed, 0x28, 0xe4, 0x18, 0xf2, 0x94, 0xab, 0x3c, 0x05,
	0x32, 0x0e, 0xb7, 0x61, 0xce, 0x04, 0x3b, 0x24, 0x5a, 0x1b, 0xac, 0x43, 0x1c, 0x71, 0xb7, 0x44,
	0xbe, 0x7e, 0x04, 0x77, 0xd2, 0x4c, 0x97, 0x7d, 0xd4, 0xf3, 0xe7, 0x19, 0x94, 0x5f, 0x0a, 0x8b,
	0xca, 0xce, 0xa3, 0x29, 0x3b, 0xd7, 0xc0, 0x7b, 0x04, 0x16, 0x17, 0xb1, 0x29, 0xd1, 0xa5, 0x8d,
	0xa9, 0x4b, 0x3a, 0xb0, 0xde, 0xff, 0x00, 0x8e, 0x4e, 0x58, 0x8c, 0x9d, 0x00, 0x7d, 0xa4, 0x89,
	0x8f, 0xfe, 0x29, 0x5e, 0x4e, 0x94, 0xf7, 0x69, 0x16, 0x8d, 0xdf, 0x0d, 0xb8, 0x97, 0xd9, 0xcb,
	0xef, 0x69, 0xa4, 0x4b, 0x50, 0x7e, 0x59, 0x48, 0x91, 0x58, 0x2e, 0x90, 0x27, 0xca, 0xe1, 0x27,
	0x45, 0x4b, 0x0a, 0xd6, 0xe6, 0x34, 0xac, 0x09, 0x28, 0x87, 0x38, 0x6a, 0x87, 0x09, 0x8d, 0xc2,
	0xb2, 0xf0, 0x87, 0x72, 0x5d, 0xbe, 0xd9, 0x9f, 0x1f, 0x27, 0x10, 0x06, 0xc3, 0x50, 0xa6, 0xfa,
	0x1a, 0x84, 0xd9, 0x0c, 0xda, 0x53, 0x20, 0x45, 0x00, 0xc4, 0xa5, 0xd7, 0x8a, 0x3f, 0xd3, 0x28,
	0x1e, 0xe7, 0x9c, 0x9c, 0x87, 0xe4, 0x3b, 0xf8, 0xc7, 0x34, 0x90, 0x53, 0xbc, 0xec, 0xe2, 0xb9,
	0xc6, 0x52, 0x30, 0x2e, 0xd1, 0x14, 0x95, 0x9b, 0x37, 0x2b, 0xdf, 0x07, 0x47, 0x8c, 0xab, 0xc0,
	0x97, 0x45, 0x9f, 0x8e, 0x46, 0x2c, 0xbe, 0xbc, 0xaa, 0x51, 0x1f, 0x74, 0x5e, 0x2b, 0xff, 0x32,
	0xff, 0xc9, 0x3d, 0xef, 0x2f, 0x03, 0xee, 0x5f, 0xe5, 0x0f, 0x0e, 0x16, 0x0d, 0x57, 0x41, 0x7f,
	0x69, 0x66, 0xff, 0xb5, 0xa8, 0xff, 0x8a, 0x85, 0x81, 0xfa, 0x7e, 0x96, 0x41, 0xdd, 0x1d, 0x0f,
	0x19, 0x3f, 0x55, 0xad, 0x3b, 0x0f, 0x75, 0x75, 0x22, 0xe1, 0xb5, 0x9b, 0x23, 0xf1, 0xc9, 0x80,
	0x8d, 0xcc, 0x05, 0xd5, 0x98, 0x66, 0x46, 0x38, 0x5f, 0x65, 0x0a, 0x6b, 0x58, 0x61, 0xb7, 0x29,
	0xcd, 0xda, 0xcb, 0x24, 0x7e, 0x0d, 0xa5, 0x72, 0x33, 0x94, 0x9f, 0x0c, 0x58, 0xcf, 0xa1, 0xb0,
	0x7c, 0x83, 0xfc, 0x37, 0x98, 0xbb, 0x27, 0x0b, 0x4c, 0xe5, 0x89, 0xf8, 0x0a, 0xbc, 0xda, 0xf0,
	0xcd, 0x45, 0x9c, 0xad, 0x21, 0x6a, 0x5e, 0x8a, 0x86, 0xf2, 0xbe, 0xd0, 0xb7, 0x8e, 0x31, 0x0e,
	0xde, 0x67, 0x25, 0x20, 0x26, 0x69, 0x36, 0x5c, 0x0d, 0xdd, 0x39, 0xe5, 0x5a, 0x53, 0xe8, 0xa6,
	0x8b, 0x99, 0xf6, 0xbe, 0x86, 0x3b, 0x99, 0x1d, 0x52, 0xab, 0xcd, 0xfc, 0x4b, 0xad, 0x25, 0xca,
	0xed, 0xf5, 0x59, 0x6e, 0x7b, 0xdf, 0xc3, 0x83, 0x3c, 0x60, 0xc4, 0x9b, 0x2f, 0xdb, 0xfc, 0xe6,
	0x54, 0xd1, 0xb7, 0xf0, 0xcf, 0x59, 0xe6, 0xe5, 0x14, 0x99, 0x59, 0x01, 0x0b, 0x2a, 0xfe, 0xcd,
	0x80, 0xba, 0xfc, 0xc4, 0x10, 0x68, 0xd6, 0xc1, 0xee, 0x45, 0xe3, 0xe9, 0xa0, 0x67, 0x1b, 0xb3,
	0xd4, 0x66, 0x39, 0x77, 0x61, 0x39, 0x13, 0x9b, 0xfa, 0x2a, 0xd0, 0xa4, 0xa5, 0xaf, 0x02, 0x25,
	0x58, 0x5c, 0x25, 0xca, 0x24, 0xa8, 0xfa, 0x07, 0x85, 0x6b, 0x0e, 0x55, 0xdf, 0x81, 0x43, 0x86,
	0x08, 0x24, 0x35, 0xdc, 0x2e, 0x9e, 0x17, 0x3e, 0x05, 0x8c, 0x2b, 0x0a, 0xe7, 0x78, 0xfc, 0xab,
	0x01, 0xcd, 0x29, 0x8d, 0x62, 0xc9, 0x2c, 0xb0, 0xfb, 0xba, 0x2f, 0x95, 0x62, 0x01, 0x3c, 0x81,
	0x7a, 0x2f, 0x52, 0x43, 0x53, 0x59, 0xbc, 0x49, 0xbc, 0x88, 0xaf, 0x34, 0xaf, 0x61, 0xd6, 0xe8,
	0xe6, 0x67, 0xba, 0x19, 0xc3, 0x8a, 0x64, 0x39, 0x1f, 0x76, 0x91, 0x8f, 0x05, 0x79, 0x84, 0xba,
	0x03, 0xfe, 0x86, 0x71, 0xa9, 0xae, 0x96, 0x33, 0x5f, 0x6e, 0x3f, 0x33, 0x99, 0x7f, 0x1b, 0xe8,
	0xef, 0xc0, 0xa1, 0x5c, 0x7f, 0xb1, 0x5c, 0xf5, 0xa1, 0x39, 0xa5, 0x70, 0xc1, 0xc5, 0xf3, 0x16,
	0x36, 0xf6, 0xd5, 0x2e, 0xf9, 0xf9, 0xf1, 0x26, 0x35, 0x73, 0xe2, 0xad, 0x37, 0x61, 0x63, 0x21,
	0xe8, 0x73, 0xe2, 0x7d, 0x01, 0x77, 0x0b, 0xcd, 0xa0, 0x13, 0x84, 0x43, 0xdd, 0x0c, 0xd6, 0xa0,
	0xf1, 0x22, 0x8e, 0x46, 0x93, 0x33, 0x56, 0xec, 0x48, 0x41, 0x38, 0x54, 0x33, 0xb1, 0x2e, 0x9a,
	0xe9, 0x2e, 0xe3, 0x38, 0x51, 0xc2, 0xba, 0x99, 0x5a, 0xf3, 0x56, 0x86, 0x09, 0xcb, 0x51, 0x6e,
	0x39, 0x37, 0x62, 0x90, 0x11, 0x00, 0xb3, 0xc7, 0x6f, 0xd7, 0xa9, 0xdf, 0xc0, 0x7a, 0x17, 0xcf,
	0xe7, 0x2e, 0x6d, 0x5a, 0xdb, 0x9c, 0xc4, 0xfc, 0x60, 0xc0, 0xa6, 0xce, 0xc8, 0x5c, 0x9d, 0x93,
	0xab, 0x9f, 0x39, 0x6f, 0xf5, 0x5b, 0xd0, 0xa1, 0x57, 0x00, 0x47, 0x69, 0xff, 0xb9, 0xef, 0x47,
	0x69, 0x98, 0xd0, 0x7f, 0x27, 0xec, 0x8c, 0x85, 0x3e, 0xaa, 0x59, 0x7f, 0xf5, 0xcf, 0xac, 0xe7,
	0x9c, 0x63, 0xc2, 0xd5, 0x07, 0x1b, 0x80, 0xf9, 0x42, 0xfe, 0x91, 0x65, 0xff, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0xaa, 0xb7, 0x30, 0x53, 0x55, 0x13, 0x00, 0x00,
}
